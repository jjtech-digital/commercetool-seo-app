{"version":3,"file":"7770.routes.a0a0f99cc675266ef450.js","mappings":"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","sources":["webpack://merchant-center-custom-application/./src/components/SettingsData/Settings.types.ts","webpack://merchant-center-custom-application/./src/components/Loader/Loader.module.css?ce49","webpack://merchant-center-custom-application/./src/components/Loader/Loader.tsx","webpack://merchant-center-custom-application/./src/api/fetchersFunction/ruleFetchers.ts","webpack://merchant-center-custom-application/./src/components/SettingsData/Settings.module.css?e905","webpack://merchant-center-custom-application/./src/components/SettingsData/SettingsRuleDataRender.tsx","webpack://merchant-center-custom-application/./src/components/SettingsData/SettingsRulesData.tsx","webpack://merchant-center-custom-application/./src/components/SettingsData/SettingsOpenAiData.tsx","webpack://merchant-center-custom-application/./src/api/fetchersFunction/aiKeyFetchers.ts","webpack://merchant-center-custom-application/./src/components/SettingsData/SettingsData.tsx","webpack://merchant-center-custom-application/./src/components/SettingsData/Settings.mock.ts","webpack://merchant-center-custom-application/./src/components/TabToggler/TabToggler.tsx","webpack://merchant-center-custom-application/./src/components/Settings/Settings.tsx","webpack://merchant-center-custom-application/./src/components/Notification/Notification.module.css?8a7a","webpack://merchant-center-custom-application/./src/components/Notification/Notification.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/TableContainer.module.css?f499","webpack://merchant-center-custom-application/./src/components/TableContainer/TableContainer.mock.ts","webpack://merchant-center-custom-application/./src/components/TableContainer/TableContainer.types.ts","webpack://merchant-center-custom-application/./src/api/apiRoot.ts","webpack://merchant-center-custom-application/./src/components/TableContainer/utils.ts","webpack://merchant-center-custom-application/./src/api/graphql/products.ts","webpack://merchant-center-custom-application/./src/components/TableContainer/SearchPerformed.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/BulkUpdateButtonSection.tsx","webpack://merchant-center-custom-application/./src/components/CustomLoadingOverlay/CustomLoadingOverlay.module.css?06c9","webpack://merchant-center-custom-application/./src/components/CustomLoadingOverlay/CustomLoadingOverlay.tsx","webpack://merchant-center-custom-application/./src/components/CustomTooltip/CustomTooltip.module.css?db25","webpack://merchant-center-custom-application/./src/components/CustomTooltip/CustomTooltip.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/GridContainer.tsx","webpack://merchant-center-custom-application/./src/components/SimpleTextEditor/SimpleTextEditor.module.css?58fa","webpack://merchant-center-custom-application/./src/components/SimpleTextEditor/SimpleTextEditor.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/ColumnsData.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/utils.ts","webpack://merchant-center-custom-application/./src/api/graphql/productDetails.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/productMetaDataFetchers.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/seoMetaDataFetchers.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/bulkMetaDataFetchers.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/bulkProductMetaDataFetchers.ts","webpack://merchant-center-custom-application/./src/api/fetchersFunction/bulkSeoMetaDataFetchers.ts","webpack://merchant-center-custom-application/./src/components/Renderers/ActionRenderButtons.tsx","webpack://merchant-center-custom-application/./src/components/Renderers/ActionRendererSEO.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/TableContainer.tsx","webpack://merchant-center-custom-application/./src/components/Renderers/ActionRendererProductInformation.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/DescriptionTableContainer.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/TableData.tsx","webpack://merchant-center-custom-application/./src/components/TableContainer/TableDataContainer.tsx","webpack://merchant-center-custom-application/./src/routes.tsx"],"sourcesContent":["import { FieldValues, SubmitHandler } from \"react-hook-form\";\nimport { IAppContext } from \"../../context/AppContext\";\n\nexport enum NavItems {\n  RULES = 'Rules',\n  OPENAI = 'Open AI',\n}\n\nexport interface ISelectedPageProps {\n  title: string;\n  isDefaultSelected: boolean;\n  name: string;\n}\n\nexport interface RuleComponent {\n  heading?: string;\n  handleSubmit?: any;\n  onSubmitFunction?: SubmitHandler<FieldValues>;\n  fields?: any;\n  register?: any;\n  errors?: any;\n  currentIndex?: number;\n  handleAddField?: () => void;\n  handleRemoveField?: any;\n}\n\nexport interface SettingRuleProps {\n  ruleComponents: RuleComponent[];\n  state: IAppContext;\n}\n\nexport interface RuleInputFieldProps {\n  item: {\n    deletable: boolean;\n    id: string;\n    rulesInput: string;\n  };\n  index: number;\n  component: RuleComponent;\n}\n\nexport interface RuleFormProps {\n  component: RuleComponent;\n  isApiFetching: boolean;\n}\n\nexport interface RuleContentItem {\n  rulesInput: string;\n  deletable: boolean;\n}\nexport interface FormData {\n  rulesContent: RuleContentItem[];\n}\nexport interface SubmitEvent {\n  preventDefault: () => void;\n}","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader-module__loaderContainer___ZJDAO\"};","import LoadingSpinner from '@commercetools-uikit/loading-spinner';\nimport styles from './Loader.module.css';\n\nexport interface ILoaderProps {\n  loadingMessage?: string;\n  shoudLoaderSpinnerShow?: boolean;\n}\n\nconst Loader = ({\n  shoudLoaderSpinnerShow = true,\n  loadingMessage,\n}: ILoaderProps) => {\n  return (\n    <div className={`${styles.loaderContainer}`}>\n      {shoudLoaderSpinnerShow && <LoadingSpinner />}\n      {loadingMessage && <p>{loadingMessage}</p>}\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\nimport { LS_KEY } from '../../constants';\n\nexport const createRulesInCtCustomObj = async (\n  payload: any,\n  setState: Function,\n  key: string,\n  name: string,\n  secrets: any\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  const prompts = payload.rulesContent.map(\n    (rule: { rulesInput: any }) => rule.rulesInput\n  );\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n  try {\n    setState?.((prev: any) => ({ ...prev, isApiFetching: true }));\n    const baseUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/custom-objects`;\n\n    const requestBody = {\n      container: `${key}`,\n      key: `${name}`,\n      value: prompts,\n    };\n\n    const response = await axios.post(baseUrl, JSON.stringify(requestBody), {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    setState?.((prev: any) => ({ ...prev, isApiFetching: false }));\n    return response?.data;\n  } catch (error) {\n    setState?.((prev: any) => ({ ...prev, isApiFetching: false }));\n    console.error('Error creating rule', error);\n    return error;\n  }\n};\nexport const getAllSavedRulesFromCtObj = async (\n  accessToken: string,\n  secrets: any,\n  name?: string,\n  key?: string,\n  setState?: Function\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  try {\n    setState?.((prev: any) => ({ ...prev, pageLoading: true }));\n    const baseUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/custom-objects/${name}/${key}`;\n    const response = await axios.get(baseUrl, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setState?.((prev: any) => ({ ...prev, pageLoading: false }));\n    return response?.data;\n  } catch (error) {\n    setState?.((prev: any) => ({ ...prev, pageLoading: false }));\n    console.error('Error fetching all rules:', error);\n    return error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"gridRuleDataSection\":\"Settings-module__gridRuleDataSection___ek1kB\",\"gridRuleInputWrapper\":\"Settings-module__gridRuleInputWrapper___beqm2\",\"gridRuleInputContainer\":\"Settings-module__gridRuleInputContainer___PvLZw\",\"gridRuleInputStyle\":\"Settings-module__gridRuleInputStyle___BkO1h\",\"ruleFormSubmitButton\":\"Settings-module__ruleFormSubmitButton___DZVh6\",\"ruleHeading\":\"Settings-module__ruleHeading___novx2\",\"actionButtonWrapper\":\"Settings-module__actionButtonWrapper___DBzVu\",\"actionButtonsContainer\":\"Settings-module__actionButtonsContainer___MaIGK\"};","import styles from './Settings.module.css';\nimport IconButton from '@commercetools-uikit/icon-button';\nimport { PlusBoldIcon, CloseBoldIcon } from '@commercetools-uikit/icons';\nimport LoadingSpinner from '@commercetools-uikit/loading-spinner';\nimport PrimaryButton from '@commercetools-uikit/primary-button';\nimport SecondaryButton from '@commercetools-uikit/secondary-button';\nimport { RuleFormProps, RuleInputFieldProps, SettingRuleProps } from './Settings.types';\n\n\n\nconst RuleInputField = ({ item, index, component }: RuleInputFieldProps) => {\n  return (\n    <div key={item.id}>\n      <div className={`${styles.gridRuleInputWrapper}`}>\n        <div className={`${styles.gridRuleInputContainer}`}>\n          <input\n            className={`${styles.gridRuleInputStyle}`}\n            {...component.register(`rulesContent.${index}.rulesInput`, {\n              required: 'Rules Content is required',\n            })}\n            placeholder=\"Generate good content\"\n          />\n          {component?.errors?.rulesContent?.[index]?.rulesInput && (\n            <div style={{ color: 'red', marginTop: '4px' }}>\n              {component.errors.rulesContent[index]?.rulesInput?.message}\n            </div>\n          )}\n        </div>\n        {index === component.currentIndex ? (\n          <IconButton\n            icon={<PlusBoldIcon />}\n            label=\"Add\"\n            onClick={component.handleAddField}\n          />\n        ) : (\n          <IconButton\n            icon={<CloseBoldIcon />}\n            label=\"Delete\"\n            onClick={() => component.handleRemoveField(index)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst RuleForm = ({ component, isApiFetching }: RuleFormProps) => {\n  return (\n    <form\n      onSubmit={component.handleSubmit(component?.onSubmitFunction)}\n      className={`${styles.gridRuleDataSection}`}\n    >\n      {component.fields.map((item: any, index: number) => (\n        <RuleInputField\n          key={item.id}\n          item={item}\n          index={index}\n          component={component}\n        />\n      ))}\n      <div className={`${styles.ruleFormSubmitButton}`}>\n        {isApiFetching ? (\n          <SecondaryButton\n            iconLeft={<LoadingSpinner />}\n            label=\"Submitting\"\n            type=\"submit\"\n            isDisabled={true}\n          />\n        ) : (\n          <PrimaryButton label=\"Save\" type=\"submit\" />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport const SettingsRuleDataRender = ({\n  ruleComponents,\n  state,\n}: SettingRuleProps) => {\n  return (\n    <div>\n      {ruleComponents?.map((component) => {\n        const isApiFetching = (() => {\n          switch (component.heading) {\n            case 'Seo Rules':\n              return state.isApiFetchingSEO;\n            case 'Description Rules':\n              return state.isApiFetchingDescription;\n            default:\n              return state.isApiFetchingKeyFeatures;\n          }\n        })();\n        return (\n          <div key={component?.heading}>\n            <span className={`${styles.ruleHeading}`}>\n              {component?.heading}\n            </span>\n            <RuleForm component={component} isApiFetching={isApiFetching} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SettingsRuleDataRender;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  useForm,\n  useFieldArray,\n  SubmitHandler,\n  FieldValues,\n} from 'react-hook-form';\nimport { useAppContext } from '../../context/AppContext';\nimport Loader from '../Loader/Loader';\nimport {\n  LS_KEY,\n  CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME,\n  CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME,\n  CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME,\n  CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY,\n} from '../../constants';\nimport {\n  createRulesInCtCustomObj,\n  getAllSavedRulesFromCtObj,\n} from '../../api/fetchersFunction/ruleFetchers';\nimport SettingsRuleDataRender from './SettingsRuleDataRender';\nimport { FormData } from './Settings.types';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\n\nconst SettingsRulesData = () => {\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const [currentIndex, setCurrentIndex] = useState({\n    seo: 0,\n    description: 0,\n    keyFeatures: 0,\n  });\n  const { state, setState } = useAppContext();\n\n  const {\n    control: controlSEO,\n    register: registerSEO,\n    handleSubmit: handleSubmitSEO,\n    formState: { errors: errorsSEO },\n  } = useForm();\n\n  const {\n    control: controlDescription,\n    register: registerDescription,\n    handleSubmit: handleSubmitDescription,\n    formState: { errors: errorsDescription },\n  } = useForm();\n\n  const {\n    control: controlKeyFeatures,\n    register: registerKeyFeatures,\n    handleSubmit: handleSubmitKeyFeatures,\n    formState: { errors: errorsKeyFeatures },\n  } = useForm();\n\n  const {\n    fields: fieldsSEO,\n    append: appendSEO,\n    remove: removeSEO,\n  } = useFieldArray({\n    control: controlSEO,\n    name: 'rulesContent',\n  });\n\n  const {\n    fields: fieldsDescription,\n    append: appendDescription,\n    remove: removeDescription,\n  } = useFieldArray({\n    control: controlDescription,\n    name: 'rulesContent',\n  });\n\n  const {\n    fields: fieldsKeyFeatures,\n    append: appendKeyFeatures,\n    remove: removeKeyFeatures,\n  } = useFieldArray({\n    control: controlKeyFeatures,\n    name: 'rulesContent',\n  });\n\n  const isInitialized = useRef({\n    seo: false,\n    description: false,\n    keyFeatures: false,\n  });\n\n  useEffect(() => {\n    if (!isInitialized.current.seo && fieldsSEO.length === 0) {\n      appendSEO({ rulesInput: '', deletable: false });\n      isInitialized.current.seo = true;\n    } else {\n      setCurrentIndex((prev) => ({ ...prev, seo: fieldsSEO.length - 1 }));\n    }\n  }, [fieldsSEO, appendSEO]);\n\n  useEffect(() => {\n    if (!isInitialized.current.description && fieldsDescription.length === 0) {\n      appendDescription({ rulesInput: '', deletable: false });\n      isInitialized.current.description = true;\n    } else {\n      setCurrentIndex((prev) => ({\n        ...prev,\n        description: fieldsDescription.length - 1,\n      }));\n    }\n  }, [fieldsDescription, appendDescription]);\n\n  useEffect(() => {\n    if (!isInitialized.current.keyFeatures && fieldsKeyFeatures.length === 0) {\n      appendKeyFeatures({ rulesInput: '', deletable: false });\n      isInitialized.current.keyFeatures = true;\n    } else {\n      setCurrentIndex((prev) => ({\n        ...prev,\n        keyFeatures: fieldsKeyFeatures.length - 1,\n      }));\n    }\n  }, [fieldsKeyFeatures, appendKeyFeatures]);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n    const fetchSavedSEORules = async () => {\n      try {\n        if (accessToken) {\n          const response = await getAllSavedRulesFromCtObj(\n            accessToken,\n            secrets,\n            CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME,\n            CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY,\n            setState\n          );\n          if (response && Array.isArray(response.value)) {\n            removeSEO();\n            response.value.forEach((value: any) => {\n              appendSEO({ rulesInput: value, deletable: false });\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching saved rules:', error);\n      }\n    };\n    fetchSavedSEORules();\n    const fetchSavedDescriptionRules = async () => {\n      try {\n        if (accessToken) {\n          const response = await getAllSavedRulesFromCtObj(\n            accessToken,\n            secrets,\n            CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME,\n            CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY,\n            setState\n          );\n          if (response && Array.isArray(response.value)) {\n            removeDescription();\n            response.value.forEach((value: any) => {\n              appendDescription({ rulesInput: value, deletable: false });\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching saved rules:', error);\n      }\n    };\n    fetchSavedDescriptionRules();\n    const fetchSavedKeyFeatureRules = async () => {\n      try {\n        if (accessToken) {\n          const response = await getAllSavedRulesFromCtObj(\n            accessToken,\n            secrets,\n            CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME,\n            CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY,\n            setState\n          );\n          if (response && Array.isArray(response.value)) {\n            removeKeyFeatures();\n            response.value.forEach((value: any) => {\n              appendKeyFeatures({ rulesInput: value, deletable: false });\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching saved rules:', error);\n      }\n    };\n    fetchSavedKeyFeatureRules();\n  }, []);\n\n  const handleAddField = (type: string) => {\n    if (type === 'seo') {\n      appendSEO({ rulesInput: '', deletable: false });\n      setCurrentIndex((prev) => ({ ...prev, seo: fieldsSEO.length }));\n    } else if (type === 'description') {\n      appendDescription({ rulesInput: '', deletable: false });\n      setCurrentIndex((prev) => ({\n        ...prev,\n        description: fieldsDescription.length,\n      }));\n    } else if (type === 'keyFeatures') {\n      appendKeyFeatures({ rulesInput: '', deletable: false });\n      setCurrentIndex((prev) => ({\n        ...prev,\n        keyFeatures: fieldsKeyFeatures.length,\n      }));\n    }\n  };\n\n  const handleRemoveField = (type: string, index: number) => {\n    if (type === 'seo') {\n      removeSEO(index);\n      setCurrentIndex((prev) => ({ ...prev, seo: fieldsSEO.length - 2 }));\n    } else if (type === 'description') {\n      removeDescription(index);\n      setCurrentIndex((prev) => ({\n        ...prev,\n        description: fieldsDescription.length - 2,\n      }));\n    } else if (type === 'keyFeatures') {\n      removeKeyFeatures(index);\n      setCurrentIndex((prev) => ({\n        ...prev,\n        keyFeatures: fieldsKeyFeatures.length - 2,\n      }));\n    }\n  };\n\n  const onSubmitSEO: SubmitHandler<FieldValues> = async (data, event) => {\n    event?.preventDefault();\n    setState((prev: any) => ({ ...prev, isApiFetchingSEO: true }));\n    const formData: FormData = data as FormData;\n    try {\n      const response = await createRulesInCtCustomObj(\n        formData,\n        setState,\n        CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME,\n        CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY,\n        secrets\n      );\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: response?.message,\n        notificationMessageType: 'success',\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setState((prev: any) => ({ ...prev, isApiFetchingSEO: false }));\n    }\n  };\n\n  const onSubmitDescription: SubmitHandler<FieldValues> = async (\n    data,\n    event\n  ) => {\n    event?.preventDefault();\n    setState((prev: any) => ({ ...prev, isApiFetchingDescription: true }));\n    const formData: FormData = data as FormData;\n    try {\n      const response = await createRulesInCtCustomObj(\n        formData,\n        setState,\n        CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME,\n        CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY,\n        secrets\n      );\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: response?.message,\n        notificationMessageType: 'success',\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setState((prev: any) => ({ ...prev, isApiFetchingDescription: false }));\n    }\n  };\n\n  const onSubmitKeyFeatures: SubmitHandler<FieldValues> = async (\n    data,\n    event\n  ) => {\n    event?.preventDefault();\n    setState((prev: any) => ({ ...prev, isApiFetchingKeyFeatures: true }));\n    const formData: FormData = data as FormData;\n    try {\n      const response = await createRulesInCtCustomObj(\n        formData,\n        setState,\n        CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME,\n        CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY,\n        secrets\n      );\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: response?.message,\n        notificationMessageType: 'success',\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setState((prev: any) => ({ ...prev, isApiFetchingKeyFeatures: false }));\n    }\n  };\n\n  const ruleComponents = [\n    {\n      heading: 'Seo Rules',\n      onSubmitFunction: onSubmitSEO,\n      fields: fieldsSEO,\n      register: registerSEO,\n      errors: errorsSEO,\n      handleAddField: () => handleAddField('seo'),\n      handleRemoveField: (index: number) => handleRemoveField('seo', index),\n      currentIndex: currentIndex.seo,\n      handleSubmit: handleSubmitSEO,\n    },\n    {\n      heading: 'Description Rules',\n      onSubmitFunction: onSubmitDescription,\n      fields: fieldsDescription,\n      register: registerDescription,\n      errors: errorsDescription,\n      handleAddField: () => handleAddField('description'),\n      handleRemoveField: (index: number) =>\n        handleRemoveField('description', index),\n      currentIndex: currentIndex.description,\n      handleSubmit: handleSubmitDescription,\n    },\n    {\n      heading: 'Key Feature Rules',\n      onSubmitFunction: onSubmitKeyFeatures,\n      fields: fieldsKeyFeatures,\n      register: registerKeyFeatures,\n      errors: errorsKeyFeatures,\n      handleAddField: () => handleAddField('keyFeatures'),\n      handleRemoveField: (index: number) =>\n        handleRemoveField('keyFeatures', index),\n      currentIndex: currentIndex.keyFeatures,\n      handleSubmit: handleSubmitKeyFeatures,\n    },\n  ];\n\n  return !state.pageLoading ? (\n    <SettingsRuleDataRender ruleComponents={ruleComponents} state={state} />\n  ) : (\n    <Loader shoudLoaderSpinnerShow={true} loadingMessage={'Loading...'} />\n  );\n};\n\nexport default SettingsRulesData;\n","import styles from './Settings.module.css';\nimport PrimaryButton from '@commercetools-uikit/primary-button';\nimport { useEffect } from 'react';\nimport { useForm, SubmitHandler, FieldValues } from 'react-hook-form';\nimport { useAppContext } from '../../context/AppContext';\nimport SecondaryButton from '@commercetools-uikit/secondary-button';\nimport LoadingSpinner from '@commercetools-uikit/loading-spinner';\nimport Loader from '../Loader/Loader';\nimport { LS_KEY } from '../../constants';\nimport {\n  getSavedAiKeyFromCtCustomObj,\n  saveAiKeyInCtCustomObj,\n} from '../../api/fetchersFunction/aiKeyFetchers';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nconst SettingsOpenAiData = () => {\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const { state, setState } = useAppContext();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n    setValue,\n  } = useForm();\n\n  const onSubmit: SubmitHandler<FieldValues> = async (data, event) => {\n    event?.preventDefault();\n\n    try {\n      const response = await saveAiKeyInCtCustomObj(\n        data.openAi,\n        setState,\n        secrets\n      );\n      localStorage.setItem(LS_KEY.OPEN_AI_KEY, response?.value);\n\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: response?.message || 'Key saved successfully.',\n        notificationMessageType: 'success',\n      }));\n    } catch (error) {\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: 'Failed to save key',\n        notificationMessageType: 'error',\n      }));\n    }\n  };\n  const fetchKey = async () => {\n    try {\n      const response = await getSavedAiKeyFromCtCustomObj(setState, secrets);\n      if (response.value) {\n        localStorage.setItem(LS_KEY.OPEN_AI_KEY, response.value);\n        setValue('openAi', response.value);\n      }\n    } catch (error) {\n      console.error('Error fetching key:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchKey();\n  }, []);\n\n  return !state.pageLoading ? (\n    <div>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={`${styles.gridRuleDataSection}`}\n      >\n        <div className={`${styles.gridRuleInputWrapper}`}>\n          <div className={`${styles.gridRuleInputContainer}`}>\n            <input\n              className={`${styles.gridRuleInputStyle}`}\n              {...register(`openAi`, {\n                required: 'This field is required is required',\n              })}\n              placeholder=\"Enter OpenAI key\"\n            />\n            {errors?.openAi && (\n              <div style={{ color: 'red', marginTop: '4px' }}>\n                {errors.openAi.message}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className={`${styles.ruleFormSubmitButton}`}>\n          {state?.isApiFetchingSEO ? (\n            <SecondaryButton\n              iconLeft={<LoadingSpinner />}\n              label=\"Submitting\"\n              type=\"submit\"\n              isDisabled={true}\n            />\n          ) : (\n            <PrimaryButton label=\"Submit\" type=\"submit\" />\n          )}\n        </div>\n      </form>\n    </div>\n  ) : (\n    <Loader shoudLoaderSpinnerShow={true} loadingMessage={'Loading...'} />\n  );\n};\n\nexport default SettingsOpenAiData;\n","import axios from 'axios';\nimport {\n  CTP_CUSTOM_OBJ_AI_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_AI_CONTAINER_NAME,\n  LS_KEY,\n} from '../../constants';\n\nexport const saveAiKeyInCtCustomObj = async (\n  aiKey: string,\n  setState: Function,\n  secrets: any\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n  try {\n    setState((prev: any) => ({ ...prev, isApiFetching: true }));\n    const baseUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/custom-objects`;\n    const requestBody = {\n      container: CTP_CUSTOM_OBJ_AI_CONTAINER_NAME,\n      key: CTP_CUSTOM_OBJ_AI_CONTAINER_KEY,\n      value: aiKey,\n    };\n\n    const response = await axios.post(baseUrl, JSON.stringify(requestBody), {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    setState((prev: any) => ({ ...prev, isApiFetching: false }));\n    return response.data;\n  } catch (error) {\n    setState((prev: any) => ({ ...prev, isApiFetching: false }));\n    console.error('Error saving key:', error);\n    return error;\n  }\n};\n\nexport const getSavedAiKeyFromCtCustomObj = async (\n  setState: Function,\n  secrets: any\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n  try {\n    setState((prev: any) => ({ ...prev, pageLoading: true }));\n    const baseUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/custom-objects/${CTP_CUSTOM_OBJ_AI_CONTAINER_NAME}/${CTP_CUSTOM_OBJ_AI_CONTAINER_KEY}`;\n\n    const response = await axios.get(baseUrl, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setState((prev: any) => ({ ...prev, pageLoading: false }));\n    return response.data;\n  } catch (error) {\n    setState((prev: any) => ({ ...prev, pageLoading: false }));\n    console.error('Error fetching saved key:', error);\n    return error;\n  }\n};\n","import { ISelectedPageProps, NavItems } from './Settings.types';\nimport SettingsRulesData from './SettingsRulesData';\nimport SettingsOpenAiData from './SettingsOpenAiData';\nexport interface ISetingDataProps {\n  defaultPage: ISelectedPageProps | undefined;\n}\nconst SettingsData = ({ defaultPage }: ISetingDataProps) => {\n  return (\n    <div>\n      {(() => {\n        switch (defaultPage?.title) {\n          case NavItems.RULES:\n            return <SettingsRulesData />;\n          case NavItems.OPENAI:\n            return <SettingsOpenAiData />;\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n};\n\nexport default SettingsData;\n","export const settingsNavMock = [\n  {\n    title: 'Rules',\n    isDefaultSelected: true,\n    name: 'rules',\n  },\n  {\n    title: 'Open AI',\n    isDefaultSelected: false,\n    name: 'openai',\n  },\n];\n","import ViewSwitcher from '@commercetools-uikit/view-switcher';\nimport { ISelectedPageProps } from '../SettingsData/Settings.types';\n\ninterface ITabHeaderProps {\n  defaultPage: ISelectedPageProps | undefined;\n  selectedPage: ISelectedPageProps[];\n  setSelectedPage: (pages: ISelectedPageProps[]) => void;\n}\nconst TabToggler = ({\n  defaultPage,\n  selectedPage,\n  setSelectedPage,\n}: ITabHeaderProps) => {\n  const menuToggleHandler = (pageName: string) => {\n    const updatedActivePages = selectedPage.map(\n      (navMenu: ISelectedPageProps) => {\n        if (navMenu.name === pageName) {\n          return {\n            ...navMenu,\n            isDefaultSelected: true,\n          };\n        } else {\n          return {\n            ...navMenu,\n            isDefaultSelected: false,\n          };\n        }\n      }\n    );\n    setSelectedPage(updatedActivePages);\n  };\n\n  return (\n    <div>\n      <ViewSwitcher.Group\n        defaultSelected={defaultPage?.name}\n        onChange={(value) => menuToggleHandler(value)}\n      >\n        {selectedPage.map((navMenu) => {\n          return (\n            <ViewSwitcher.Button key={navMenu?.name} value={navMenu?.name}>\n              {navMenu?.title}\n            </ViewSwitcher.Button>\n          );\n        })}\n      </ViewSwitcher.Group>\n    </div>\n  );\n};\n\nexport default TabToggler;\n","import Spacings from '@commercetools-uikit/spacings';\nimport FlatButton from '@commercetools-uikit/flat-button';\nimport { BackIcon } from '@commercetools-uikit/icons';\nimport Text from '@commercetools-uikit/text';\nimport { Link as RouterLink } from 'react-router-dom';\nimport SettingsData from '../SettingsData/SettingsData';\nimport { useState } from 'react';\nimport { settingsNavMock } from '../SettingsData/Settings.mock';\nimport { ISelectedPageProps } from '../SettingsData/Settings.types';\nimport TabToggler from '../TabToggler/TabToggler';\n\nconst Settings = (props: { linkToProducts: any }) => {\n  const [selectedPage, setSelectedPage] =\n    useState<ISelectedPageProps[]>(settingsNavMock);\n  const defaultPage = selectedPage?.find((item) => item.isDefaultSelected);\n  return (\n    <Spacings.Stack scale=\"xl\">\n      <Spacings.Stack scale=\"xs\">\n        <FlatButton\n          as={RouterLink}\n          to={props.linkToProducts}\n          label={'Back to Products'}\n          icon={<BackIcon />}\n        />\n        <Text.Headline as=\"h2\">{'Settings'}</Text.Headline>\n      </Spacings.Stack>\n      <TabToggler\n        defaultPage={defaultPage}\n        selectedPage={selectedPage}\n        setSelectedPage={setSelectedPage}\n      />\n      {defaultPage && <SettingsData defaultPage={defaultPage} />}\n    </Spacings.Stack>\n  );\n};\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nexport default {\"notificationBottom\":\"Notification-module__notificationBottom___irkPu\"};","import { ContentNotification } from '@commercetools-uikit/notifications';\nimport styles from './Notification.module.css';\nimport { useEffect } from 'react';\n\ninterface INotificationProps {\n  successMessage: string;\n  setSuccessMessage: Function;\n  type?: 'success' | 'error' | 'info' | 'warning';\n}\n\nconst Notification = ({\n  successMessage,\n  setSuccessMessage,\n  type = 'success',\n}: INotificationProps) => {\n  const handleNotificationDismiss = () => {\n    setSuccessMessage((prev: any) => ({\n      ...prev,\n      notificationMessage: '',\n      notificationMessageType: '',\n    }));\n  };\n\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => {\n        handleNotificationDismiss();\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n  return (\n    <div className={`${styles.notificationBottom}`}>\n      <ContentNotification type={type} onRemove={handleNotificationDismiss}>\n        {successMessage}\n      </ContentNotification>\n    </div>\n  );\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableContainer\":\"TableContainer-module__tableContainer___N7L9m\",\"tableSearchSection\":\"TableContainer-module__tableSearchSection___YHsdz\",\"searchBar\":\"TableContainer-module__searchBar___HGCfW\",\"actionContainer\":\"TableContainer-module__actionContainer___H_2b_\",\"actionButons\":\"TableContainer-module__actionButons___FJW2E\",\"settingIcon\":\"TableContainer-module__settingIcon___PE91G\",\"emptyState\":\"TableContainer-module__emptyState___hI9dL\",\"navContainer\":\"TableContainer-module__navContainer____dJEf\"};","export const TableContainerNavMock = [\n  {\n    title: 'SEO',\n    isDefaultSelected: true,\n    name: 'seo',\n  },\n  {\n    title: 'Description',\n    isDefaultSelected: false,\n    name: 'description',\n  },\n];\n","export interface LocaleType {\n  locale: string;\n  value: string;\n}\nexport interface CategoriesType {\n  name: string | null;\n  slug: string | null;\n}\nexport interface MasterDataCurrentType {\n  masterVariant?: any;\n  name?: string;\n  nameAllLocales?: LocaleType[];\n  title?: string | null;\n  description?: string | null;\n  categories?: CategoriesType[];\n  metaTitle?: string | null;\n  metaDescription?: string | null;\n  keyFeatures?: string | null;\n}\nexport interface MasterDataType {\n  current: MasterDataCurrentType;\n}\nexport interface IProduct {\n  id: string;\n  key: string;\n  masterData: MasterDataType;\n  version: number;\n}\nexport interface IFetchrawData {\n  data: IProduct[];\n  limit: string;\n  message: string;\n  offset: string;\n  status: number;\n  total: number;\n}\n\nexport interface IResponseFromAi {\n  id: string | null | undefined;\n  title?: string | null;\n  description: string | null | undefined;\n  version: number | null | undefined;\n  keyFeatures?: string | null;\n}\n\nexport enum NavItems {\n  SEO = 'SEO',\n  DESCRIPTION = 'Description',\n}\n\n","import { createApiBuilderFromCtpClient } from '@commercetools/platform-sdk';\nimport {\n  ClientBuilder,\n  AuthMiddlewareOptions,\n  HttpMiddlewareOptions,\n} from '@commercetools/sdk-client-v2';\nimport fetch from 'node-fetch';\n\nconst authMiddlewareOptions: AuthMiddlewareOptions = {\n  host: 'https://auth.australia-southeast1.gcp.commercetools.com',\n  projectKey: 'jj-custom-app',\n  credentials: {\n    clientId: 'xZVC4aex0a0MaWLtQ8mk6ZZM',\n    clientSecret: 'Wq0FXRJSQpbsxHDKIU6ObdebuiQDJVAs',\n  },\n  scopes: [\n    \"view_connectors:jj-custom-app view_attribute_groups:jj-custom-app manage_stores:jj-custom-app manage_types:jj-custom-app manage_project:jj-custom-app manage_my_business_units:jj-custom-app manage_cart_discounts:jj-custom-app view_orders:jj-custom-app view_shipping_methods:jj-custom-app view_connectors_deployments:jj-custom-app manage_audit_log:jj-custom-app view_stores:jj-custom-app manage_checkout_payment_intents:jj-custom-app manage_states:jj-custom-app manage_products:jj-custom-app view_staged_quotes:jj-custom-app manage_my_payments:jj-custom-app manage_my_orders:jj-custom-app manage_my_quotes:jj-custom-app view_messages:jj-custom-app view_customers:jj-custom-app manage_categories:jj-custom-app manage_associate_roles:jj-custom-app view_cart_discounts:jj-custom-app view_categories:jj-custom-app manage_sessions:jj-custom-app view_quote_requests:jj-custom-app manage_tax_categories:jj-custom-app view_payments:jj-custom-app view_project_settings:jj-custom-app view_tax_categories:jj-custom-app view_customer_groups:jj-custom-app manage_payments:jj-custom-app manage_product_selections:jj-custom-app view_states:jj-custom-app manage_project_settings:jj-custom-app view_associate_roles:jj-custom-app introspect_oauth_tokens:jj-custom-app create_anonymous_token:jj-custom-app manage_subscriptions:jj-custom-app manage_api_clients:jj-custom-app view_business_units:jj-custom-app view_types:jj-custom-app manage_my_quote_requests:jj-custom-app view_products:jj-custom-app manage_customers:jj-custom-app manage_business_units:jj-custom-app manage_import_containers:jj-custom-app manage_discount_codes:jj-custom-app view_standalone_prices:jj-custom-app manage_orders:jj-custom-app manage_standalone_prices:jj-custom-app view_quotes:jj-custom-app view_shopping_lists:jj-custom-app manage_my_shopping_lists:jj-custom-app manage_my_profile:jj-custom-app view_order_edits:jj-custom-app manage_shipping_methods:jj-custom-app view_sessions:jj-custom-app view_product_selections:jj-custom-app manage_connectors:jj-custom-app manage_quotes:jj-custom-app manage_shopping_lists:jj-custom-app view_audit_log:jj-custom-app manage_extensions:jj-custom-app manage_attribute_groups:jj-custom-app manage_staged_quotes:jj-custom-app view_import_containers:jj-custom-app manage_quote_requests:jj-custom-app manage_connectors_deployments:jj-custom-app manage_order_edits:jj-custom-app view_discount_codes:jj-custom-app manage_customer_groups:jj-custom-app\",\n  ],\n  fetch,\n};\n\nconst httpMiddlewareOptions: HttpMiddlewareOptions = {\n  host: 'https://api.australia-southeast1.gcp.commercetools.com',\n  fetch,\n};\n\nconst ctpClient = new ClientBuilder()\n  .withClientCredentialsFlow(authMiddlewareOptions)\n  .withHttpMiddleware(httpMiddlewareOptions)\n  .build();\n\nconst apiRoot = createApiBuilderFromCtpClient(ctpClient).withProjectKey({\n  projectKey: 'jj-custom-app',\n});\n\nexport default apiRoot;\n","import { getProducts } from \"../../api/graphql/products\";\n\nexport const commonColumns = [\n    {\n      field: 'productKey',\n      flex: 1,\n      minWidth: 140,\n      editable: false,\n      headerCheckboxSelection: true,\n      checkboxSelection: true,\n      valueGetter: (p: any) => {\n        return p?.data?.key;\n      },\n    },\n    {\n      field: 'name',\n      flex: 3.5,\n      editable: false,\n      valueGetter: (params: any) => {\n        return params.data?.masterData?.current?.name;\n      },\n    },\n  ];\n\nexport const performSearch = async (\n    apiRoot,\n    search,\n    pageRelatedData,\n    setState,\n    setTableData,\n    setTotalProductCount,\n    setSearchPerformed\n  ) => {\n    const { dataLocale, perPage, offSet } = pageRelatedData\n     setSearchPerformed(true);\n    try {\n      if (!search) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'Search field cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n        return;\n      }\n      if (!dataLocale) {\n        throw new Error('Locale is not defined');\n      }\n      setState((prev: any) => ({ ...prev, pageLoading: true }));\n      const data = await apiRoot\n        .productProjections()\n        .search()\n        .get({\n          queryArgs: {\n            [`text.${dataLocale}`]: search,\n            limit: perPage?.value,\n            offset: offSet,\n          },\n        })\n        .execute();\n      setState((prev: any) => ({ ...prev, pageLoading: false }));\n      return data;\n    } catch (error) {\n      console.error('Search failed:', error);\n      setState((prev: any) => ({\n        ...prev,\n        pageLoading: false,\n        notificationMessage: 'Search failed. Please try again later.',\n        notificationMessageType: 'error',\n      }));\n    }\n  };\n\n// Helper function to fetch data\nexport const fetchProductData = async (\n  apiRoot,\n  dataLocale,\n  pageData,\n  setState,\n  setTotalProductCount,\n  setTableData,\n  setSearchPerformed\n) => {\n  const { perPage, offSet } = pageData\n  setSearchPerformed(false);\n  try {\n    setState((prev: any) => ({ ...prev, pageLoading: true }));\n    const productsData = await apiRoot\n      .graphql()\n      .post({\n        body: {\n          query: getProducts(),\n          variables: {\n            limit: Number(perPage?.value),\n            offset: Number(offSet),\n            Locale: dataLocale,\n          },\n        },\n      })\n      .execute();\n    setState((prev: any) => ({ ...prev, pageLoading: false }));\n    setTotalProductCount(productsData?.body?.data?.products?.total);\n    setTableData(productsData?.body?.data?.products?.results);\n  } catch (error) {\n    console.error('Error fetching product data:', error);\n    setState((state: any) => ({\n      ...state,\n      pageLoading: false,\n      notificationMessage:\n        'Error fetching product data. Please try again later.',\n      notificationMessageType: 'error',\n    }));\n  }\n};\n\nexport const removeDoubleQuotes = (text: string) => {\n  if (text?.startsWith('\"') && text?.endsWith('\"')) {\n    return text?.slice(1, -1);\n  }\n  return text;\n};\n","export const getProducts = (): string => {\n    return `query ($limit: Int, $offset: Int, $Locale: Locale, $LocaleProjection: [Locale!]) {\n      products(limit: $limit, offset: $offset, localeProjection: $LocaleProjection) {\n        total\n        offset\n        results {\n          id\n          key\n          version\n          masterData {\n            current {\n              name(locale: $Locale)\n              nameAllLocales {\n                locale\n                value\n              }\n              masterVariant {\n                attributesRaw {\n                  name\n                  value\n                }\n              }\n              categories {\n                name(locale: $Locale)\n                slug(locale: $Locale)\n              }\n              description(locale : $Locale)\n              descriptionAllLocales {\n                locale\n                value\n              }\n              metaTitle(locale: $Locale)\n              metaDescription(locale: $Locale)\n              metaTitleAllLocales {\n                locale\n                value\n              }\n              metaDescriptionAllLocales {\n                locale\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n  };\n  ","import Text from '@commercetools-uikit/text';\n\ntype SearchPerformedProps = {\n  searchPerformed: boolean;\n};\n\nconst SearchPerformed = (props: SearchPerformedProps) => {\n  const { searchPerformed } = props;\n  return (\n    <Text.Body>\n      {searchPerformed\n        ? 'No products found matching your search criteria.'\n        : 'No products available.'}\n    </Text.Body>\n  );\n};\n\nexport default SearchPerformed;\n","import  styles from \"./TableContainer.module.css\"\nimport { PrimaryButton } from '@commercetools-frontend/ui-kit'\nimport { IProduct } from \"./TableContainer.types\";\nimport { RefObject } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\n\ninterface BulkUpdateButtonSectionProps {\nselectedRows: IProduct[] | null;\n  handleGenerate: () => void;\n  handleApply: () => void;\n  gridRef: RefObject<AgGridReact<any>>;\n}\nconst BulkUpdateButtonSection = ({selectedRows, handleGenerate, handleApply, gridRef} : BulkUpdateButtonSectionProps) => {\n  return (\n    <div className={`${styles.actionContainer}`}>\n    {(selectedRows!==null) && selectedRows?.length > 0 && (\n      <div className={`${styles.actionButons}`}>\n        <PrimaryButton\n          size=\"medium\"\n          label=\"Generate\"\n          onClick={handleGenerate}\n          isDisabled={false}\n        />\n        <PrimaryButton\n          size=\"medium\"\n          label=\"Cancel\"\n          onClick={() => gridRef?.current?.api?.stopEditing(true)}\n          isDisabled={false}\n        />\n        <PrimaryButton\n          size=\"medium\"\n          label=\"Apply\"\n          onClick={handleApply}\n          isDisabled={false}\n        />\n      </div>\n    )}\n  </div>\n  )\n}\n\nexport default BulkUpdateButtonSection","// extracted by mini-css-extract-plugin\nexport default {\"loadingOverlay\":\"CustomLoadingOverlay-module__loadingOverlay___xxWuq\",\"loadingDots\":\"CustomLoadingOverlay-module__loadingDots___DvfyT\",\"blink\":\"CustomLoadingOverlay-module__blink___W8IUy\"};","import { CustomLoadingOverlayProps } from 'ag-grid-react';\nimport styles from './CustomLoadingOverlay.module.css';\n\nconst CustomLoadingOverlay = (props: CustomLoadingOverlayProps) => {\n  return (\n    <div className=\"ag-overlay-loading-center\">\n      <div\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className={`${styles.loadingOverlay}`}\n      >\n        {props?.context?.loadingOverlayMessage}\n        {''}\n        <span className={`${styles.loadingDots}`}>...</span>\n      </div>\n    </div>\n  );\n};\nexport default CustomLoadingOverlay;\n","// extracted by mini-css-extract-plugin\nexport default {\"customTooltip\":\"CustomTooltip-module__customTooltip___XsGlS\"};","import styles from './CustomTooltip.module.css';\nconst CustomTooltip = (props: any) => {\n  return (\n    <div\n      className={`${styles.customTooltip}`}\n      style={{\n        backgroundColor: props.color || '#f9f5f5',\n      }}\n    >\n      {props.value}\n    </div>\n  );\n};\n\nexport default CustomTooltip;\n","import styles from './TableContainer.module.css';\nimport { SearchTextInput } from '@commercetools-frontend/ui-kit';\nimport { Pagination } from '@commercetools-uikit/pagination';\nimport Loader from '../Loader/Loader';\nimport SearchPerformed from './SearchPerformed';\nimport BulkUpdateButtonSection from './BulkUpdateButtonSection';\nimport { SetStateAction, useEffect, useMemo, FC } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport CustomLoadingOverlay from '../CustomLoadingOverlay/CustomLoadingOverlay';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { IAppContext } from '../../context/AppContext';\nimport { IProduct } from './TableContainer.types';\nimport { TState } from '@commercetools-uikit/hooks';\n\ninterface GridContainerProps {\n  search: string;\n  setSearch: (value: string) => void;\n  handleSearch: () => void;\n  fetchData: () => void;\n  selectedRows: IProduct[] | null;\n  handleBulkGenerateClick: () => void;\n  handleBulkApplyClick: () => void;\n  gridRef: any;\n  state: IAppContext;\n  tableData: IProduct[];\n  colDefs: any[];\n  context: any;\n  onSelectionChanged: () => void;\n  totalProductCount?: number;\n  page: TState;\n  perPage: TState;\n  searchPerformed: boolean;\n  searchboxPlaceholder: string;\n  components: any;\n}\n\nconst GridContainer: FC<GridContainerProps> = ({\n  search,\n  setSearch,\n  handleSearch,\n  fetchData,\n  selectedRows,\n  handleBulkGenerateClick,\n  handleBulkApplyClick,\n  gridRef,\n  state,\n  tableData,\n  colDefs,\n  context,\n  onSelectionChanged,\n  totalProductCount,\n  page,\n  perPage,\n  searchPerformed,\n  searchboxPlaceholder,\n  components\n}) => {\n  const gridStyle = useMemo(() => ({ width: '100%', height: '65vh' }), []);\n  const offSet = (page?.value - 1) * perPage?.value;\n  const { dataLocale } = useApplicationContext((context) => ({\n    dataLocale: context.dataLocale,\n    projectLanguages: context.project?.languages,\n  }));\n\n  const defaultColDef = useMemo(() => {\n    return {\n      flex: 1,\n      tooltipComponent: CustomTooltip,\n    };\n  }, []);\n\n  const loadingOverlayComponent = useMemo(() => {\n    return CustomLoadingOverlay;\n  }, []);\n\n  useEffect(() => {\n    if (search) {\n      handleSearch();\n    } else {\n      fetchData();\n    }\n  }, [dataLocale, offSet, perPage?.value]);\n  return (\n    <div className={`${styles.tableContainer}`}>\n      <div className={`${styles.tableSearchSection}`}>\n        <div className={`${styles.searchBar}`}>\n          <SearchTextInput\n            placeholder={searchboxPlaceholder}\n            value={search}\n            onChange={(event: { target: { value: SetStateAction<string> } }) =>\n              setSearch(String(event.target.value))\n            }\n            onSubmit={handleSearch}\n            onReset={() => {\n              setSearch('');\n              fetchData();\n            }}\n            // isClearable={false}\n          />\n        </div>\n        <BulkUpdateButtonSection\n          selectedRows={selectedRows}\n          handleGenerate={handleBulkGenerateClick}\n          handleApply={handleBulkApplyClick}\n          gridRef={gridRef}\n        />\n      </div>\n      {!state.pageLoading && !!tableData?.length ? (\n        <div\n          className=\"ag-theme-quartz\"\n          style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}\n        >\n          <div style={gridStyle}>\n            <AgGridReact\n              ref={gridRef}\n              // getRowId={getRowId}\n              rowData={tableData}\n              columnDefs={colDefs}\n              defaultColDef={defaultColDef}\n              // onGridReady={onGridReady as any}\n              components={components}\n              rowSelection={'multiple'}\n              suppressRowClickSelection={true}\n              tooltipShowDelay={1000}\n              tooltipInteraction={true}\n              reactiveCustomComponents={true}\n              onSelectionChanged={onSelectionChanged}\n              loadingOverlayComponent={loadingOverlayComponent}\n              context={context}\n              // onCellDoubleClick={onCellDoubleClick}\n              //  suppressClickEdit={true}\n              // editType=\"fullRow\"\n            />\n          </div>\n          <Pagination\n            totalItems={totalProductCount || 0}\n            page={page?.value}\n            onPageChange={page?.onChange}\n            perPage={perPage?.value}\n            onPerPageChange={perPage?.onChange}\n            perPageRange={'m'}\n          />\n        </div>\n      ) : (\n        <div className={`${styles.emptyState}`}>\n          {state.pageLoading ? (\n            <Loader\n              shoudLoaderSpinnerShow={true}\n              loadingMessage={'Loading...'}\n            />\n          ) : (\n            <SearchPerformed searchPerformed={searchPerformed} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GridContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"mySimpleEditorContainer\":\"SimpleTextEditor-module__mySimpleEditorContainer___KJHvy\",\"mySimpleEditor\":\"SimpleTextEditor-module__mySimpleEditor___GH_CZ\",\"mySimpleEditorButtonContainer\":\"SimpleTextEditor-module__mySimpleEditorButtonContainer___ESoYc\"};","import { forwardRef, useEffect, useRef } from 'react';\nimport styles from './SimpleTextEditor.module.css';\nimport IconButton from '@commercetools-uikit/icon-button';\nimport { CheckBoldIcon, CloseBoldIcon } from '@commercetools-uikit/icons';\ninterface SimpleTextEditorProps {\n  value: string;\n  onValueChange: (value: string | null) => void;\n  eventKey: string | null;\n  initialValue: string;\n  stopEditing: () => void;\n}\n\nexport const SimpleTextEditor = forwardRef<\n  HTMLInputElement,\n  SimpleTextEditorProps\n>((props, ref) => {\n  const { value, onValueChange, eventKey } = props;\n  const updateValue = (val: string) => {\n    onValueChange?.(val === '' ? null : val);\n  };\n\n  useEffect(() => {\n    let startValue;\n    if (eventKey === 'Backspace') {\n      startValue = '';\n    } else if (eventKey && eventKey.length === 1) {\n      startValue = eventKey;\n    } else {\n      startValue = value;\n    }\n    if (startValue == null) {\n      startValue = '';\n    }\n\n    updateValue(startValue);\n\n    refInput.current?.focus();\n  }, []);\n\n  const refInput = useRef<HTMLTextAreaElement>(null);\n\n  return (\n    <div className={`${styles.mySimpleEditorContainer}`}>\n      <textarea\n        value={value || ''}\n        ref={refInput}\n        onChange={(e) => updateValue(e.target.value)}\n        className={`${styles.mySimpleEditor}`}\n      />\n      <div className={`${styles.mySimpleEditorButtonContainer}`}>\n        <IconButton\n          icon={<CloseBoldIcon />}\n          label=\"CloseBoldIcon\"\n          size=\"medium\"\n          onClick={() => {\n            updateValue(props.initialValue);\n            props.stopEditing();\n          }}\n        />\n        <IconButton\n          icon={<CheckBoldIcon />}\n          label=\"CheckBoldIcon\"\n          size=\"medium\"\n          onClick={() => {\n            updateValue(value);\n            props.stopEditing();\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import { SimpleTextEditor } from '../SimpleTextEditor/SimpleTextEditor';\nimport { commonColumns } from './utils';\n\n\nexport const defaultDescColumns = [\n  ...commonColumns,\n  {\n    field: 'Description',\n    headerName: 'Description',\n    flex: 4,\n    tooltipValueGetter: (p: { value: any }) => {\n      return p.value;\n    },\n    valueGetter: (params: any) => {\n      return params.data?.masterData?.current?.description;\n    },\n    valueSetter: (params: any) => {\n      params.data.masterData.current.description = params.newValue;\n      return true;\n    },\n    editable: true,\n    sortable: false,\n    cellEditor: SimpleTextEditor,\n    cellEditorPopup: true,\n  },\n  {\n    field: 'Key Features',\n    headerName: 'Key Features',\n    flex: 4,\n    tooltipValueGetter: (p: { value: any }) => {\n      return p.value;\n    },\n    valueGetter: (params: any) => {\n      const LS_DataLocale = localStorage.getItem('selectedDataLocale') || \"en\";\n      const features =\n        params.data.masterData.current.masterVariant.attributesRaw.find(\n          (item: any) => item.name === 'features'\n        )?.value?.[0];\n      return features?.[LS_DataLocale];\n    },\n    valueSetter: (params: any) => {\n      const LS_DataLocale = localStorage.getItem('selectedDataLocale') ;\n      const attributesRaw =\n        params.data.masterData.current.masterVariant.attributesRaw;\n      let features = attributesRaw.find(\n        (item: any) => item.name === 'features'\n      );\n      if (!features) {\n        features = { name: 'features', value: [{ [LS_DataLocale]: params.newValue }] };\n        attributesRaw.push(features);\n        return true\n      }\n      if (features) {\n        features.value[0][LS_DataLocale] = params.newValue;\n        return true;\n      }\n      return false;\n    },\n    editable: true,\n    sortable: false,\n    cellEditor: SimpleTextEditor,\n    cellEditorPopup: true,\n  },\n];\n\nexport const defaultSeoColumns = [\n  ...commonColumns,\n  {\n    field: 'seoTitle',\n    headerName: 'SEO Title',\n    flex: 4,\n    tooltipValueGetter: (p: { value: any }) => p.value,\n    valueGetter: (params: any) => {\n      return params?.data?.masterData?.current?.metaTitle;\n    },\n    valueSetter: (params: any) => {\n      params.data.masterData.current.metaTitle = params.newValue;\n      return true;\n    },\n    editable: true,\n    sortable: false,\n    cellEditor: SimpleTextEditor,\n    cellEditorPopup: true,\n  },\n  {\n    field: 'seoDescription',\n    headerName: 'SEO Description',\n    flex: 4,\n    tooltipValueGetter: (p: { value: any }) => p.value,\n    valueGetter: (params: any) => {\n      return params.data?.masterData?.current?.metaDescription;\n    },\n    valueSetter: (params: any) => {\n      params.data.masterData.current.metaDescription = params.newValue;\n      return true;\n    },\n    editable: true,\n    sortable: false,\n    cellEditor: SimpleTextEditor,\n    cellEditorPopup: true,\n  },\n];\n","import {\n  LS_KEY,\n  descriptionPattern,\n  featuresPattern,\n  normalDescPattern,\n  titlePattern,\n} from '../../constants';\nimport apiRoot from '../apiRoot';\nimport { getProductDetails } from '../graphql/productDetails';\n\nexport const openAiKey = localStorage.getItem(LS_KEY.OPEN_AI_KEY);\nexport const setNotification = (\n  setState: Function,\n  message: string,\n  type: string\n) => {\n  setState((prev: any) => ({\n    ...prev,\n    notificationMessage: message,\n    notificationMessageType: type,\n  }));\n};\n\nexport const batchSize = 20;\n\ntype GenerateMetaDataFunction = (\n  secrets: any,\n  id: string,\n  dataLocale: string,\n  openAiFunction: Function\n) => Promise<any>;\n\nexport const processBatches = async (\n  productIds: string[],\n  batchSize: number,\n  strings: {\n    dataLocale: string;\n    errorMessage: string;\n    secrets: any,\n  },\n  generateMetaData: GenerateMetaDataFunction,\n  queryOpenAi: Function,\n  setState: Function,\n  successHandler: (data: any[]) => void\n) => {\n  const totalBatches = Math.ceil(productIds?.length / batchSize);\n\n  for (let i = 0; i < totalBatches; i++) {\n    const start = i * batchSize;\n    const end = Math.min((i + 1) * batchSize, productIds.length);\n    const batchIds = productIds.slice(start, end);\n\n    try {\n      const response = batchIds.map(async (id) => {\n        return await generateMetaData(\n          strings.secrets,\n          id,\n          strings?.dataLocale,\n          queryOpenAi\n        );\n      });\n\n      const data = await Promise.all(response);\n      const has401Error = data?.some((res: any) => res?.data?.status === 401);\n      if (has401Error) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'Incorrect API key provided',\n          notificationMessageType: 'error',\n        }));\n        return null;\n      }\n\n      successHandler(data);\n      return data;\n    } catch (error) {\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: strings.errorMessage,\n        notificationMessageType: 'error',\n      }));\n      console.error(strings.errorMessage, error);\n    }\n  }\n};\n\nexport const matchData = (response: any) => {\n  const metaData = response?.choices?.[0]?.message?.content;\n\n  const featuresMatch = metaData?.match(featuresPattern);\n  const keyFeatures = featuresMatch ? featuresMatch[1].trim() : null;\n\n  const descriptionMatch = metaData?.match(normalDescPattern);\n  const description = descriptionMatch ? descriptionMatch[1].trim() : null;\n  return {\n    keyFeatures,\n    description,\n  };\n};\n\nexport const seoMatchData = (response: any) => {\n  const message = response?.choices?.[0]?.message?.content;\n  const titleMatch = message?.match(titlePattern);\n  const title = titleMatch ? titleMatch[2]?.trim() : null;\n\n  const descriptionMatch = message?.match(descriptionPattern);\n  const description = descriptionMatch ? descriptionMatch[2]?.trim() : null;\n  return {\n    title,\n    description,\n  };\n};\n\nexport const getProductById = async (productId: string, locale?: string) => {\n  try {\n    const response = await apiRoot\n      .graphql()\n      .post({\n        body: {\n          query: getProductDetails(),\n          variables: {\n            id: productId,\n            Locale: locale,\n          },\n        },\n      })\n      .execute();\n\n    const product = response.body.data.product;\n\n    if (!product) {\n      return `Product with ID ${productId} not found.`;\n    }\n    return product;\n  } catch (error) {\n    console.error(`Error retrieving product by ID ${productId}:`, error);\n\n    return 'Failed to retrieve product details';\n  }\n};\n\nexport const generateMetaData = async (\n  secrets: any,\n  productId: string,\n  dataLocale: any,\n  openAiFunction: Function,\n  setState?: Function\n) => {\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n  if (!openAiKey) {\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage:\n        'OpenAI key is missing. Please set it in the settings.',\n      notificationMessageType: 'error',\n    }));\n    return null;\n  }\n  try {\n    const productResponse = await getProductById(productId, dataLocale);\n\n    const productName = productResponse?.masterData?.current?.name;\n    const categories = productResponse?.masterData?.current?.categories;\n\n    const categoryNames = categories\n      ?.map((category: any) => category?.name)\n      ?.join(', ');\n    const query = `Product name: \"${productName}\", Categories: \"${categoryNames}\"`;\n\n    const localeQuery = dataLocale ? `, Locale: \"${dataLocale}\"` : '';\n    const data: any = await openAiFunction(\n      secrets,\n      query + localeQuery,\n      accessToken,\n      openAiKey\n    );\n    if (data?.status && data?.status == 401) {\n      setState?.((prev: any) => ({\n        ...prev,\n        notificationMessage: data?.error?.message,\n        notificationMessageType: 'error',\n      }));\n      return;\n    }\n\n    return { ...data, productId: productId };\n  } catch (error) {\n    console.error('Error generating metadata for productID:', productId, error);\n\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage: 'Error generating metadata.',\n      notificationMessageType: 'error',\n    }));\n    return null;\n  }\n};\n","export const getProductDetails = (): string => {\n    return `\n    fragment variantFields on ProductVariant {\n      sku\n      attributesRaw {\n        name\n        value\n      }\n    }\n\n    query ($id: String, $Locale: Locale, $LocaleProjection:[Locale!]) {\n      product(id: $id, localeProjection: $LocaleProjection) {\n        id\n        key\n        masterData {\n          current {\n            name(locale: $Locale)\n            nameAllLocales {\n              locale\n              value\n            }\n            masterVariant {\n              ...variantFields\n            }\n            description(locale: $Locale)\n            descriptionAllLocales {\n              locale\n              value\n            }\n            metaTitle(locale: $Locale)\n            metaDescription(locale: $Locale)\n            metaTitleAllLocales {\n              locale\n              value\n            }\n            metaDescriptionAllLocales {\n              locale\n              value\n            }\n            categories {\n              name(locale: $Locale)\n              slug(locale: $Locale)\n            }\n          }\n        }\n        skus\n      }\n    }\n      `;\n  };","import axios from 'axios';\nimport {\n  CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME,\n  CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME,\n  LS_KEY,\n} from '../../constants';\nimport OpenAI from 'openai';\nimport { getAllSavedRulesFromCtObj } from './ruleFetchers';\nimport { getProductById } from './utils';\n\nexport const updateProductMeta = async (\n  productId: string,\n  keyFeatures: string,\n  description: string,\n  version: number,\n  dataLocale: any,\n  secrets: any,\n  setState?: Function\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n\n  const productResponse = await getProductById(productId);\n\n  const existingDescriptions =\n    productResponse?.masterData?.current?.descriptionAllLocales || [];\n\n  const descriptionObj: any = {};\n  for (const item of existingDescriptions) {\n    if (item.locale !== dataLocale) {\n      descriptionObj[item.locale] = item.value;\n    }\n  }\n  descriptionObj[dataLocale] = description;\n\n  let keyFeaturesObj: any = {};\n  let existingFeatures =\n    productResponse?.masterData?.current?.masterVariant.attributesRaw.find(\n      (item: any) => item.name === 'features'\n    );\n  if (existingFeatures?.value?.[0]) {\n    existingFeatures.value[0][dataLocale] = keyFeatures || ' ';\n  }\n  if (!existingFeatures) {\n    existingFeatures = { name: 'features', value: [{ [dataLocale]: '' }] };\n    const features = { name: 'features', value: [{ [dataLocale]: '' }] };\n    productResponse?.masterData?.current?.masterVariant.attributesRaw.push(\n      features\n    );\n    existingFeatures.value[0][dataLocale] = keyFeatures || ' ';\n  }\n\n  keyFeaturesObj = existingFeatures.value[0];\n  const apiUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/products/${productId}`;\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  const x = [keyFeaturesObj];\n\n  const payload = {\n    version: version,\n    actions: [\n      {\n        action: 'setDescription',\n        description: descriptionObj,\n        staged: false,\n      },\n      {\n        action: 'setAttributeInAllVariants',\n        name: 'features',\n        value: x,\n        staged: false,\n      },\n    ],\n  };\n  try {\n    const response = await axios.post(apiUrl, payload, { headers });\n\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage: keyFeatures\n        ? 'Description and key features updated successfully.'\n        : 'Description updated successfully.',\n      notificationMessageType: 'success',\n    }));\n    return response.data;\n  } catch (error) {\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage:\n        'Error updating product description and key features.',\n      notificationMessageType: 'error',\n    }));\n    console.error(\n      'Error updating product description and key features:',\n      error\n    );\n    return null;\n  }\n};\n\nexport const queryProductOpenAi = async (\n  secrets: any,\n  query: string,\n  accessToken?: string | null,\n  openAiKey?: string\n) => {\n  const openAi = new OpenAI({\n    apiKey: openAiKey,\n    dangerouslyAllowBrowser: true,\n  });\n  let updatedPromptDescription = '';\n  let updatedPromptKeyfeatures = '';\n  if (accessToken) {\n    const promptDescription: any = await getAllSavedRulesFromCtObj(\n      accessToken,\n      secrets,\n      CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME,\n      CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY\n    );\n    const promptKeyFeatures: any = await getAllSavedRulesFromCtObj(\n      accessToken,\n      secrets,\n      CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME,\n      CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY\n    );\n    const allEmptyDescriptionrules = promptDescription?.value?.every(\n      (p: string) => /^\\s*$/.test(p)\n    );\n    const allEmptyKeyFeaturesrules = promptKeyFeatures?.value?.every(\n      (p: string) => /^\\s*$/.test(p)\n    );\n\n    if (!allEmptyDescriptionrules && !allEmptyKeyFeaturesrules) {\n      updatedPromptDescription = promptDescription?.value?.join(' ');\n      updatedPromptKeyfeatures = promptKeyFeatures?.value?.join(' ');\n    }\n  }\n\n  let contentString = `Find some key features and a precise description for a product with ${query}. The format for the output should be like this - *Description*:abc and *Key Features*:abc\"`;\n\n  // Append rules to the content string if updatedPrompt is not empty\n  if (updatedPromptDescription && updatedPromptKeyfeatures) {\n    contentString += ` and Rules for description: ${updatedPromptDescription} and rules for key features: ${updatedPromptKeyfeatures}`;\n  } else {\n    // Add fallback rules\n    contentString += ` and Rules: Include the main keyword in both the title and description. Seperate all the key features ith comma. Give a user engaging description which would be able to put forward the proper explaination about the product and spark curiosity in incoming traffic. Limit the description to under 150-160 characters for full visibility in search results. Give atleast 5 key features, you can give more`;\n  }\n  try {\n    const response = await openAi.chat.completions.create({\n      model: 'gpt-4-turbo-preview',\n      temperature: 0.5,\n      max_tokens: 3500,\n      top_p: 1.0,\n      frequency_penalty: 0.0,\n      presence_penalty: 0.0,\n      messages: [\n        {\n          role: 'user',\n          content: contentString,\n        },\n      ],\n    });\n    return response;\n  } catch (error) {\n    console.error('Error querying OpenAI:', error);\n    return null;\n  }\n};\n","import axios from 'axios';\nimport {\n  CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY,\n  CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME,\n  LS_KEY,\n} from '../../constants';\nimport OpenAI from 'openai';\nimport { getAllSavedRulesFromCtObj } from './ruleFetchers';\nimport { getProductById } from './utils';\n\nexport const updateProductSeoMeta = async (\n  secrets: any,\n  productId: string,\n  metaTitle: string,\n  metaDescription: string,\n  version: number,\n  dataLocale: any,\n  setState?: Function\n) => {\n  const { CTP_API_URL, CTP_PROJECT_KEY } = secrets;\n  const accessToken = localStorage.getItem(LS_KEY.CT_OBJ_TOKEN);\n\n  const productResponse = await getProductById(productId);\n\n  const existingMetaTitles =\n    productResponse?.masterData?.current?.metaTitleAllLocales || [];\n  const existingMetaDescriptions =\n    productResponse?.masterData?.current?.metaDescriptionAllLocales || [];\n\n  const metaTitleObj: any = {};\n  for (const item of existingMetaTitles) {\n    if (item.locale !== dataLocale) {\n      metaTitleObj[item.locale] = item.value;\n    }\n  }\n  // Add the new metaTitle for dataLocale\n  metaTitleObj[dataLocale] = metaTitle;\n\n  const metaDescriptionObj: any = {};\n  for (const item of existingMetaDescriptions) {\n    if (item.locale !== dataLocale) {\n      metaDescriptionObj[item.locale] = item.value;\n    }\n  }\n  // Add the new metaDescription for dataLocale\n  metaDescriptionObj[dataLocale] = metaDescription;\n\n  const apiUrl = `${CTP_API_URL}/${CTP_PROJECT_KEY}/products/${productId}`;\n  const headers = {\n    Authorization: `Bearer ${accessToken}`,\n    'Content-Type': 'application/json',\n  };\n\n  const payload = {\n    version: version,\n    actions: [\n      {\n        action: 'setMetaTitle',\n        metaTitle: metaTitleObj,\n        staged: false,\n      },\n      {\n        action: 'setMetaDescription',\n        metaDescription: metaDescriptionObj,\n        staged: false,\n      },\n    ],\n  };\n  try {\n    const response = await axios.post(apiUrl, payload, { headers });\n\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage: 'SEO title and description updated successfully.',\n      notificationMessageType: 'success',\n    }));\n    return response.data;\n  } catch (error) {\n    setState?.((prev: any) => ({\n      ...prev,\n      notificationMessage: 'Error updating SEO title and description.',\n      notificationMessageType: 'error',\n    }));\n    console.error('Error updating product SEO meta:', error);\n    return null;\n  }\n};\n\nexport const queryOpenAi = async (\n  secrets: any,\n  query: string,\n  accessToken?: string | null,\n  openAiKey?: string\n) => {\n  const openAi = new OpenAI({\n    apiKey: openAiKey,\n    dangerouslyAllowBrowser: true,\n  });\n  let updatedPrompt = '';\n  if (accessToken) {\n    const prompt: any = getAllSavedRulesFromCtObj(\n      accessToken,\n      secrets,\n      CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME,\n      CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY\n    );\n    const allEmpty = prompt?.value?.every((p: string) => /^\\s*$/.test(p));\n\n    // If any prompt is non-empty, update updatedPrompt\n    if (!allEmpty) {\n      updatedPrompt = prompt?.value?.join(' ');\n    }\n  }\n\n  let contentString = `Find the SEO title and description for product with ${query}`;\n\n  // Append rules to the content string if updatedPrompt is not empty\n  if (updatedPrompt) {\n    contentString += ` and Rules: ${updatedPrompt}`;\n  } else {\n    // Add fallback rules\n    contentString += ` and Rules: Include the main keyword in both the title and description. Keep the title concise (50-60 characters) while making it compelling for clicks. Clearly communicate product benefits in the description to engage users and spark curiosity. Limit the description to under 150-160 characters for full visibility in search results.`;\n  }\n  try {\n    const response = await openAi.chat.completions.create({\n      model: 'gpt-4-turbo-preview',\n      temperature: 0.5,\n      max_tokens: 3500,\n      top_p: 1.0,\n      frequency_penalty: 0.0,\n      presence_penalty: 0.0,\n      messages: [\n        {\n          role: 'user',\n          content: contentString,\n        },\n      ],\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n","import { IProduct } from '../../components/TableContainer/TableContainer.types';\nimport { removeDoubleQuotes } from '../../components/TableContainer/utils';\nimport {\n  applyBulkProductMeta,\n  bulkGenerateProductMetaData,\n} from './bulkProductMetaDataFetchers';\nimport {\n  bulkGenerateSeoMetaData,\n  applyBulkProductSeoMeta,\n} from './bulkSeoMetaDataFetchers';\nimport { matchData, seoMatchData } from './utils';\n\nexport const handleDescBulkGenerateClick = async (\n  strings: any,\n  context: any,\n  gridRef: any,\n  selectedRows: IProduct[] | null,\n  setState: Function,\n  tableData: IProduct[],\n  setTableData: Function\n) => {\n  const { dataLocale, secrets } = strings;\n  const selectedNodes = gridRef.current!.api.getSelectedNodes();\n  context.loadingOverlayMessage =\n    'Generating description and key features for selected products. This may take some time';\n  gridRef.current!.api.showLoadingOverlay();\n\n  const bulkProductIds: any = selectedRows?.map(\n    (products: IProduct) => products?.id\n  );\n  const aiBulkResponse = await bulkGenerateProductMetaData(\n    secrets,\n    bulkProductIds,\n    dataLocale,\n    setState\n  );\n\n  const updatedTableData = [...tableData];\n\n  aiBulkResponse?.forEach((response) => {\n    const matchDataResponse = matchData(response);\n    const { keyFeatures, description } = matchDataResponse;\n    const cleanedKeyFeatures = removeDoubleQuotes(keyFeatures);\n    const cleanedDescription = removeDoubleQuotes(description);\n\n    const index = updatedTableData.findIndex(\n      (item) => item.id === response?.productId\n    );\n    if (index !== -1) {\n      const attributesRaw =\n        updatedTableData[index].masterData.current?.masterVariant\n          ?.attributesRaw;\n      let features = attributesRaw.find(\n        (item: any) => item.name === 'features'\n      );\n      let featureDatalocale = dataLocale || 'en';\n      if (!features) {\n        features = { name: 'features', value: [{ [featureDatalocale]: '' }] };\n        attributesRaw.push(features);\n      }\n      if (features?.value[0]) {\n        features.value[0][featureDatalocale] = cleanedKeyFeatures;\n      }\n      updatedTableData[index].masterData.current.description =\n        cleanedDescription;\n    }\n  });\n\n  setTableData(updatedTableData);\n\n  setTimeout(() => {\n    selectedNodes.forEach((node: any) => {\n      gridRef.current!.api.getRowNode(node.id)?.setSelected(true);\n    });\n  }, 0);\n\n  gridRef.current!.api.hideOverlay();\n  context.loadingOverlayMessage = 'Loading';\n};\n\nexport const handleSeoBulkGenerateClick = async (\n  strings: any,\n  context: any,\n  gridRef: any,\n  selectedRows: IProduct[] | null,\n  setState: Function,\n  tableData: IProduct[],\n  setTableData: Function\n) => {\n  const { dataLocale, secrets } = strings\n  const selectedNodes = gridRef.current!.api.getSelectedNodes();\n  context.loadingOverlayMessage =\n    'Generating SEO metadata for selected products. This may take some time';\n  gridRef.current!.api.showLoadingOverlay();\n\n  const bulkProductIds: any = selectedRows?.map(\n    (products: IProduct) => products?.id\n  );\n  const aiBulkResponse = await bulkGenerateSeoMetaData(\n    secrets,\n    bulkProductIds,\n    dataLocale,\n    setState\n  );\n\n  const updatedTableData = [...tableData];\n\n  aiBulkResponse?.forEach((response) => {\n    const responseData = seoMatchData(response);\n    const { title, description } = responseData;\n    const cleanedTitle = removeDoubleQuotes(title);\n    const cleanedDescription = removeDoubleQuotes(description);\n\n    const index = updatedTableData.findIndex(\n      (item) => item.id === response?.productId\n    );\n    if (index !== -1) {\n      updatedTableData[index].masterData.current.metaTitle = cleanedTitle;\n      updatedTableData[index].masterData.current.metaDescription =\n        cleanedDescription;\n    }\n  });\n\n  setTableData(updatedTableData);\n\n  setTimeout(() => {\n    selectedNodes.forEach((node: any) => {\n      gridRef.current!.api.getRowNode(node.id)?.setSelected(true);\n    });\n  }, 0);\n\n  gridRef.current!.api.hideOverlay();\n  context.loadingOverlayMessage = 'Loading';\n};\n\nexport const dataApplication = (\n  response: any,\n  tableData: IProduct[],\n  setTableData: Function,\n  gridRef: any,\n  context: any\n) => {\n  if (response) {\n    const updatedTableData = [...tableData];\n\n    response.forEach((updatedProduct: any) => {\n      const index = updatedTableData?.findIndex(\n        (item) => item?.id === updatedProduct?.id\n      );\n      if (index !== -1) {\n        updatedTableData[index].version = updatedProduct?.version;\n      }\n    });\n\n    setTableData(updatedTableData);\n  }\n\n  gridRef.current!.api.hideOverlay();\n  context.loadingOverlayMessage = 'Loading';\n};\nexport const handleDescBulkApplyClick = async (\n  strings: any,\n  selectedRows: IProduct[] | null,\n  setState: Function,\n  context: any,\n  gridRef: any,\n  tableData: IProduct[],\n  setTableData: Function\n) => {\n  const { dataLocale, secrets } = strings;\n  const featuredDataLocale = dataLocale || 'en';\n  const hasEmptyMeta = selectedRows?.some(\n    (product: IProduct) => !product.masterData.current.description\n  );\n  if (hasEmptyMeta) {\n    setState((prev: any) => ({\n      ...prev,\n      notificationMessage: 'Description cannot be empty for selected products.',\n      notificationMessageType: 'error',\n    }));\n  } else {\n    const bulkSelectedProductsData: any = selectedRows?.map(\n      (product: IProduct) => ({\n        productId: product?.id,\n        keyFeatures:\n          product?.masterData?.current?.masterVariant.attributesRaw.find(\n            (item: any) => item.name === 'features'\n          ).value[0][featuredDataLocale],\n        description: product?.masterData?.current?.description,\n        version: product?.version,\n      })\n    );\n    context.loadingOverlayMessage =\n      'Applying description and key features for selected products. This may take some time';\n    gridRef.current!.api.showLoadingOverlay();\n\n    const res: any = await applyBulkProductMeta(\n      bulkSelectedProductsData,\n      dataLocale,\n      secrets,\n      setState\n    );\n\n    dataApplication(res, tableData, setTableData, gridRef, context);\n  }\n};\n\nexport const handleSeoBulkApplyClick = async (\n  strings: any,\n  selectedRows: IProduct[] | null,\n  context: any,\n  gridRef: any,\n  \n  setState: Function,\n  tableData: IProduct[],\n  setTableData: Function\n) => {\n  const { dataLocale, secrets } = strings\n  const hasEmptyMeta = selectedRows?.some(\n    (product: IProduct) =>\n      !product.masterData.current.metaTitle ||\n      !product.masterData.current.metaDescription\n  );\n  if (hasEmptyMeta) {\n    setState((prev: any) => ({\n      ...prev,\n      notificationMessage:\n        'SEO Title or description cannot be empty for selected products.',\n      notificationMessageType: 'error',\n    }));\n  } else {\n    const bulkSelectedProductsData: any = selectedRows?.map(\n      (product: IProduct) => ({\n        productId: product?.id,\n        metaTitle: product?.masterData?.current?.metaTitle,\n        metaDescription: product?.masterData?.current?.metaDescription,\n        version: product?.version,\n      })\n    );\n    context.loadingOverlayMessage =\n      'Applying SEO meta for selected products. This may take some time';\n    gridRef.current!.api.showLoadingOverlay();\n\n    const res: any = await applyBulkProductSeoMeta(\n      secrets,\n      bulkSelectedProductsData,\n      dataLocale,\n      setState\n    );\n    dataApplication(res, tableData, setTableData, gridRef, context);\n  }\n};\n","import {\n  queryProductOpenAi,\n  updateProductMeta,\n} from './productMetaDataFetchers';\nimport {\n  batchSize,\n  generateMetaData,\n  openAiKey,\n  processBatches,\n  setNotification,\n} from './utils';\nexport const bulkGenerateProductMetaData = async (\n  secrets: any,\n  productIds: string[],\n  dataLocale: any,\n  setState: Function\n) => {\n  if (!openAiKey) {\n    setNotification(\n      setState,\n      'OpenAI key is missing. Please set it in the settings tab.',\n      'error'\n    );\n    return null;\n  }\n  let productMetaDataResponses: any[] = [];\n\n  const strings = {\n    dataLocale: dataLocale,\n    errorMessage:\n      'Error generating product description and key features in batch.',\n      secrets,\n  };\n\n  await processBatches(\n    productIds,\n    batchSize,\n    strings,\n    generateMetaData,\n    queryProductOpenAi,\n    setState,\n    (data) => {\n      productMetaDataResponses = [...productMetaDataResponses, ...data];\n    }\n  );\n\n  return productMetaDataResponses;\n};\n\nexport const applyBulkProductMeta = async (\n  bulkSelectedProductsData: any[],\n  dataLocale: any,\n  secrets: any,\n  setState: Function\n) => {\n  const batchSize = 20; // Define your batch size\n  const totalBatches = Math.ceil(bulkSelectedProductsData?.length / batchSize);\n  let applyBulkResponses: any[] = [];\n\n  for (let i = 0; i < totalBatches; i++) {\n    const start = i * batchSize;\n    const end = Math.min((i + 1) * batchSize, bulkSelectedProductsData?.length);\n    const batchProducts = bulkSelectedProductsData?.slice(start, end);\n\n    const batchData = batchProducts?.map((product) => ({\n      productId: product.productId,\n      keyFeatures: product.keyFeatures,\n      description: product.description,\n      version: product.version,\n      dataLocale: dataLocale,\n    }));\n    try {\n      const applyBulkPromises = batchData?.map(async (product) => {\n        return await updateProductMeta(\n          product?.productId,\n          product?.keyFeatures,\n          product?.description,\n          product?.version,\n          product?.dataLocale,\n          secrets,\n        );\n      });\n      const data = await Promise.all(applyBulkPromises);\n\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage:\n          'Product description and key features applied successfully.',\n        notificationMessageType: 'success',\n      }));\n\n      applyBulkResponses = [...applyBulkResponses, ...data];\n    } catch (error) {\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage:\n          'Error applying description and key features in batch.',\n        notificationMessageType: 'error',\n      }));\n      console.error(\n        'Error applying description and key features in batch:',\n        error\n      );\n    }\n  }\n  return applyBulkResponses;\n};\n","import { queryOpenAi, updateProductSeoMeta } from './seoMetaDataFetchers';\nimport {\n  batchSize,\n  generateMetaData,\n  openAiKey,\n  processBatches,\n  setNotification,\n} from './utils';\nexport const bulkGenerateSeoMetaData = async (\n  secrets: any,\n  productIds: string[],\n  dataLocale: any,\n  setState: Function\n) => {\n  if (!openAiKey) {\n    setNotification(\n      setState,\n      'OpenAI key is missing. Please set it in the settings.',\n      'error'\n    );\n    return null;\n  }\n  let metaDataResponses: any[] = [];\n\n  const strings = {\n    dataLocale: dataLocale,\n    errorMessage: 'Error generating SEO metadata in batch.',\n    secrets,\n  };\n\n  await processBatches(\n    productIds,\n    batchSize,\n    strings,\n    generateMetaData,\n    queryOpenAi,\n    setState,\n    (data) => {\n      metaDataResponses = [...metaDataResponses, ...data];\n    }\n  );\n\n  return metaDataResponses;\n};\n\nexport const applyBulkProductSeoMeta = async (\n  secrets: any,\n  bulkSelectedProductsData: any[],\n  dataLocale: any,\n  setState: Function\n) => {\n  const batchSize = 20; // Define your batch size\n  const totalBatches = Math.ceil(bulkSelectedProductsData?.length / batchSize);\n  let applyBulkResponses: any[] = [];\n\n  for (let i = 0; i < totalBatches; i++) {\n    const start = i * batchSize;\n    const end = Math.min((i + 1) * batchSize, bulkSelectedProductsData?.length);\n    const batchProducts = bulkSelectedProductsData?.slice(start, end);\n\n    const batchData = batchProducts?.map((product) => ({\n      productId: product.productId,\n      metaTitle: product.metaTitle,\n      metaDescription: product.metaDescription,\n      version: product.version,\n      dataLocale: dataLocale,\n    }));\n\n    try {\n      const applyBulkSeoPromises = batchData?.map(async (product) => {\n        return await updateProductSeoMeta(\n          secrets,\n          product?.productId,\n          product?.metaTitle,\n          product?.metaDescription,\n          product?.version,\n          product?.dataLocale\n        );\n      });\n      const data = await Promise.all(applyBulkSeoPromises);\n\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: 'SEO metadata applied successfully.',\n        notificationMessageType: 'success',\n      }));\n\n      applyBulkResponses = [...applyBulkResponses, ...data];\n    } catch (error) {\n      setState((prev: any) => ({\n        ...prev,\n        notificationMessage: 'Error applying SEO metadata in batch.',\n        notificationMessageType: 'error',\n      }));\n      console.error('Error applying SEO metadata in batch:', error);\n    }\n  }\n  return applyBulkResponses;\n};\n","import { PrimaryButton } from \"@commercetools-frontend/ui-kit\"\nimport { FC } from \"react\"\nimport styles from \"./../SettingsData/Settings.module.css\"\n\ninterface ActionRenderButtonsProps {\n  handleGenerate : (props :any) => void;\n  handleApply: (rowIndex: number) => void;\n  allProps: any;\n}\n\nconst ActionRenderButtons: FC<ActionRenderButtonsProps>  = ({handleGenerate, handleApply, allProps}) => {\n  return (\n    <div className={styles.actionButtonsContainer}>\n    <div>\n      <PrimaryButton\n        size=\"medium\"\n        label=\"Generate\"\n        onClick={() => handleGenerate(allProps)}\n        isDisabled={false}\n      />\n    </div>\n    <div className={styles.actionButtonWrapper}>\n      <PrimaryButton\n        size=\"medium\"\n        label=\"Apply\"\n        onClick={() => handleApply(allProps.rowIndex)}\n        isDisabled={false}\n      />\n    </div>\n  </div>\n  )\n}\n\nexport default ActionRenderButtons","import { useAppContext } from '../../context/AppContext';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport {\n  queryOpenAi,\n  updateProductSeoMeta,\n} from '../../api/fetchersFunction/seoMetaDataFetchers';\nimport {\n  generateMetaData,\n  seoMatchData,\n} from '../../api/fetchersFunction/utils';\nimport ActionRenderButtons from './ActionRenderButtons';\n\nexport default (props: any) => {\n  const { setState } = useAppContext();\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const { dataLocale } = useApplicationContext((context) => ({\n    dataLocale: context.dataLocale,\n    projectLanguages: context.project?.languages,\n  }));\n\n  const handleGenerateClick = async (params: any) => {\n    props.context.loadingOverlayMessage = 'Generating meta data';\n    props.gridRef.current!.api.showLoadingOverlay();\n    const aiResponse = await generateMetaData(\n      secrets,\n      params?.data?.id,\n      dataLocale,\n      queryOpenAi,\n      setState\n    );\n    const responseData = seoMatchData(aiResponse);\n    const { title, description } = responseData;\n    props.setResponseFromAi({\n      id: params.data.id,\n      title: title,\n      description: description,\n      version: params.data.version,\n    });\n    props.gridRef.current!.api.hideOverlay();\n    props.context.loadingOverlayMessage = 'Loading';\n  };\n\n  const handleApplyClick = async (rowIndex: number) => {\n    const updatedRowData =\n      props?.gridRef?.current!?.api?.getDisplayedRowAtIndex(rowIndex)?.data;\n\n    if (updatedRowData?.masterData?.current) {\n      const { metaTitle, metaDescription } = updatedRowData.masterData.current;\n\n      if (!metaTitle && !metaDescription) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'SEO title and SEO description cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n      } else if (!metaTitle) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'SEO title cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n      } else if (!metaDescription) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'SEO description cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n      } else {\n        props.context.loadingOverlayMessage = 'Applying';\n        props.gridRef.current!.api.showLoadingOverlay();\n        const res = await updateProductSeoMeta(\n          secrets,\n          updatedRowData.id,\n          metaTitle,\n          metaDescription,\n          updatedRowData.version,\n          dataLocale,\n          setState\n        );\n\n        props.setResponseFromAi((prev: any) => ({\n          ...prev,\n          version: res?.version,\n        }));\n        props.gridRef.current!.api.hideOverlay();\n        props.context.loadingOverlayMessage = 'Loading';\n      }\n    }\n    props.gridRef?.current!?.api?.stopEditing(false);\n  };\n\n  return (\n    <ActionRenderButtons\n      handleGenerate={handleGenerateClick}\n      handleApply={handleApplyClick}\n      allProps={props}\n    />\n  );\n};\n","import { useState, useMemo, useEffect, useCallback, useRef } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport { usePaginationState } from '@commercetools-uikit/hooks';\nimport { IProduct, IResponseFromAi } from './TableContainer.types';\nimport { useAppContext } from '../../context/AppContext';\nimport apiRoot from '../../api/apiRoot';\nimport { fetchProductData, performSearch, removeDoubleQuotes } from './utils';\nimport GridContainer from './GridContainer';\nimport { defaultSeoColumns } from './ColumnsData';\nimport {\n  handleSeoBulkGenerateClick,\n  handleSeoBulkApplyClick,\n} from '../../api/fetchersFunction/bulkMetaDataFetchers';\nimport ActionRendererSEO from '../Renderers/ActionRendererSEO';\n\nconst TableContainer = () => {\n  const [seoTableData, setSeoTableData] = useState<IProduct[]>([]);\n  const [totalProductsCount, setTotalProductsCount] = useState<number>();\n  const [seoSearch, setSeoSearch] = useState('');\n  const [isSearchPerformed, setIsSearchPerformed] = useState(false);\n  const [seoSelectedRows, setSeoSelectedRows] = useState<IProduct[] | null>([]);\n  const [seoResponseFromAi, setSeoResponseFromAi] = useState<IResponseFromAi>({\n    id: null,\n    title: null,\n    description: null,\n    version: null,\n  });\n  // we might need this later\n  // const [gridApi, setGridApi] = useState(null);\n  // const [columnApi, setColumnApi] = useState(null);\n  // const onGridReady = (params: any) => {\n  //   setGridApi(params.api);\n  //   setColumnApi(params.columnApi);\n  // };\n  \n  const seoGridRef = useRef<AgGridReact>(null);\n\n  const { dataLocale } = useApplicationContext((context) => ({\n    dataLocale: context.dataLocale,\n    projectLanguages: context.project?.languages,\n  }));\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const components = useMemo(\n    () => ({\n      actionRenderer: ActionRendererSEO,\n    }),\n    []\n  );\n\n  const { page, perPage } = usePaginationState();\n  const { state, setState } = useAppContext();\n  const offSet = (page?.value - 1) * perPage?.value;\n\n  const colDefs = [\n    ...defaultSeoColumns,\n    {\n      headerName: 'Actions',\n      field: 'productKey',\n      flex: 2,\n      editable: false,\n      minWidth: 200,\n      sortable: false,\n      cellRenderer: 'actionRenderer',\n      cellRendererParams: {\n        setResponseFromAi: setSeoResponseFromAi,\n        gridRef: seoGridRef,\n      },\n    },\n  ];\n\n  const context = useMemo<any>(() => {\n    return {\n      loadingOverlayMessage: 'Loading',\n    };\n  }, []);\n\n  const onSelectionChanged = useCallback(() => {\n    let getSelectedRows = seoGridRef.current!.api.getSelectedRows();\n    setSeoSelectedRows(getSelectedRows);\n  }, [offSet, perPage?.value]);\n\n  const pageRelatedData = {\n    dataLocale: dataLocale,\n    offSet: offSet,\n    perPage: perPage,\n  };\n\n  const handleSeoSearch = async () => {\n    const data = await performSearch(\n      apiRoot,\n      seoSearch,\n      pageRelatedData,\n      setState,\n      setSeoTableData,\n      setTotalProductsCount,\n      setIsSearchPerformed\n    );\n    if (data) {\n      const filteredData = data.body.results.map((product: any) => {\n        const nameInCurrentLocale = product.name?.[dataLocale || 'en'];\n        const metaTitleInCurrentLocale =\n          product.metaTitle?.[dataLocale || 'en'];\n        const metaDescriptionInCurrentLocale =\n          product.metaDescription?.[dataLocale || 'en'];\n\n        return {\n          id: product.id,\n          version: product.version,\n          key: product.key,\n          masterData: {\n            current: {\n              name: nameInCurrentLocale,\n              metaTitle: metaTitleInCurrentLocale,\n              metaDescription: metaDescriptionInCurrentLocale,\n            },\n          },\n        };\n      });\n      setSeoTableData(filteredData);\n      setTotalProductsCount(data.body.total);\n    }\n  };\n\n  const pageData = {\n    perPage,\n    offSet,\n  };\n\n  const fetchSeoData = async (): Promise<void> => {\n    await fetchProductData(\n      apiRoot,\n      dataLocale,\n      pageData,\n      setState,\n      setTotalProductsCount,\n      setSeoTableData,\n      setIsSearchPerformed\n    );\n  };\n\n  useEffect(() => {\n    if (\n      seoResponseFromAi?.id &&\n      seoResponseFromAi?.title &&\n      seoResponseFromAi?.description &&\n      seoResponseFromAi?.version\n    ) {\n      const updatedTableData = [...seoTableData];\n      const index = updatedTableData.findIndex(\n        (item) => item.id === seoResponseFromAi.id\n      );\n      if (index !== -1) {\n        const cleanedTitle = removeDoubleQuotes(seoResponseFromAi.title);\n        const cleanedDescription = removeDoubleQuotes(\n          seoResponseFromAi.description\n        );\n        updatedTableData[index].masterData.current.metaTitle = cleanedTitle;\n        updatedTableData[index].masterData.current.metaDescription =\n          cleanedDescription;\n        updatedTableData[index].version = seoResponseFromAi.version;\n        setSeoTableData(updatedTableData);\n      }\n    }\n  }, [seoResponseFromAi]);\n\n  const searchBoxText =\n    'Search by Product key, Name, Seo title or Seo description';\n\n  const strings = {\n    dataLocale, secrets\n  }\n  return (\n    <GridContainer\n      search={seoSearch}\n      setSearch={setSeoSearch}\n      handleSearch={handleSeoSearch}\n      fetchData={fetchSeoData}\n      selectedRows={seoSelectedRows}\n      handleBulkGenerateClick={() =>\n        handleSeoBulkGenerateClick(\n          strings,\n          context,\n          seoGridRef,\n          seoSelectedRows,\n          setState,\n          seoTableData,\n          setSeoTableData\n        )\n      }\n      handleBulkApplyClick={() =>\n        handleSeoBulkApplyClick(\n          strings,\n          seoSelectedRows,\n          context,\n          seoGridRef,\n          setState,\n          seoTableData,\n          setSeoTableData\n        )\n      }\n      gridRef={seoGridRef}\n      state={state}\n      tableData={seoTableData}\n      colDefs={colDefs}\n      onSelectionChanged={onSelectionChanged}\n      context={context}\n      totalProductCount={totalProductsCount}\n      page={page}\n      perPage={perPage}\n      searchPerformed={isSearchPerformed}\n      searchboxPlaceholder={searchBoxText}\n      components={components}\n    />\n  );\n};\nexport default TableContainer;\n","import { useAppContext } from '../../context/AppContext';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport {\n  queryProductOpenAi,\n  updateProductMeta,\n} from '../../api/fetchersFunction/productMetaDataFetchers';\nimport { generateMetaData, matchData } from '../../api/fetchersFunction/utils';\nimport ActionRenderButtons from './ActionRenderButtons';\n\nexport default (props: any) => {\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const { setState } = useAppContext();\n\n  const { dataLocale } = useApplicationContext((context) => ({\n    dataLocale: context?.dataLocale,\n    projectLanguages: context.project?.languages,\n  }));\n\n  const handleGenerateClick = async (params: any) => {\n    props.context.loadingOverlayMessage =\n      'Generating product description and features';\n\n    props.gridRef.current!.api.showLoadingOverlay();\n    try {\n      const aiResponse = await generateMetaData(\n        secrets,\n        params?.data?.id,\n        dataLocale,\n        queryProductOpenAi,\n        setState\n      );\n\n      const matchDataResponse = matchData(aiResponse);\n      const { keyFeatures, description } = matchDataResponse;\n\n      props.setResponseFromAi({\n        id: params.data.id,\n        keyFeatures: keyFeatures,\n        description: description,\n        version: params.data.version,\n      });\n    } catch (error) {\n      console.error('Error generating product metadata:', error);\n    } finally {\n      props.gridRef.current!.api.hideOverlay();\n      props.context.loadingOverlayMessage = 'Loading';\n    }\n  };\n\n  const handleApplyClick = async (rowIndex: number) => {\n    const updatedRowData =\n      props?.gridRef?.current?.api?.getDisplayedRowAtIndex(rowIndex)?.data;\n    if (updatedRowData?.masterData?.current) {\n      const { description } = updatedRowData.masterData.current;\n      const featureDataLocale = dataLocale || 'en';\n      const keyFeatures =\n        updatedRowData.masterData.current.masterVariant.attributesRaw.find(\n          (item: any) => item.name === 'features'\n        ).value[0][featureDataLocale];\n      if (!description && !keyFeatures) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'Description and Key Features cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n      } else if (!description) {\n        setState((prev: any) => ({\n          ...prev,\n          notificationMessage: 'Description cannot be empty.',\n          notificationMessageType: 'error',\n        }));\n      }\n      // Can be uncommented if we want make key features compulsory\n      // else if (!keyFeatures) {\n      //   setState((prev: any) => ({\n      //     ...prev,\n      //     notificationMessage: 'Key Features cannot be empty.',\n      //     notificationMessageType: 'error',\n      //   }));\n      // }\n      else {\n        props.context.loadingOverlayMessage = 'Applying';\n        props.gridRef.current!.api.showLoadingOverlay();\n        try {\n          const res = await updateProductMeta(\n            updatedRowData.id,\n            keyFeatures,\n            description,\n            updatedRowData.version,\n            dataLocale,\n            secrets,\n            setState\n          );\n\n          props.setResponseFromAi((prev: any) => ({\n            ...prev,\n            version: res?.version,\n          }));\n        } catch (error) {\n          console.error('Error updating product metadata:', error);\n        } finally {\n          props.gridRef.current!.api.hideOverlay();\n          props.context.loadingOverlayMessage = 'Loading';\n        }\n      }\n    }\n    props.gridRef?.current?.api?.stopEditing(false);\n  };\n\n  return (\n    <ActionRenderButtons\n      handleGenerate={handleGenerateClick}\n      handleApply={handleApplyClick}\n      allProps={props}\n    />\n  );\n};\n","import { useState, useMemo, useEffect, useCallback, useRef } from 'react';\n\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\nimport { usePaginationState } from '@commercetools-uikit/hooks';\nimport { IProduct, IResponseFromAi } from './TableContainer.types';\nimport { useAppContext } from '../../context/AppContext';\nimport apiRoot from '../../api/apiRoot';\nimport { fetchProductData, performSearch, removeDoubleQuotes } from './utils';\nimport GridContainer from './GridContainer';\nimport { defaultDescColumns } from './ColumnsData';\nimport {\n  handleDescBulkApplyClick,\n  handleDescBulkGenerateClick,\n} from '../../api/fetchersFunction/bulkMetaDataFetchers';\nimport ActionRendererProductInformation from '../Renderers/ActionRendererProductInformation';\nconst DescriptionTableContainer = () => {\n  const CTP_API_URL = useApplicationContext(\n    (context) => context.environment.apiUrl\n  );\n  const CTP_PROJECT_KEY = useApplicationContext(\n    (context) => context.environment.projectKey\n  );\n  const secrets = {\n    CTP_API_URL,\n    CTP_PROJECT_KEY,\n  };\n  const [tableData, setTableData] = useState<IProduct[]>([]);\n  const [totalProductCount, setTotalProductCount] = useState<number>();\n  const [search, setSearch] = useState('');\n  const [searchPerformed, setSearchPerformed] = useState(false);\n  const [selectedRows, setSelectedRows] = useState<IProduct[] | null>([]);\n  const [responseFromAi, setResponseFromAi] = useState<IResponseFromAi>({\n    id: null,\n    keyFeatures: null,\n    description: null,\n    version: null,\n  });\n  // we might need this later\n  // const [gridApi, setGridApi] = useState(null);\n  // const [columnApi, setColumnApi] = useState(null);\n  // const onGridReady = (params: any) => {\n  //   setGridApi(params.api)\n  //   setColumnApi(params.columnApi)\n  // };\n  const gridRef = useRef<AgGridReact>(null);\n\n  const { dataLocale } = useApplicationContext((context) => ({\n    dataLocale: context.dataLocale,\n    projectLanguages: context.project?.languages,\n  }));\n\n  const components = useMemo(\n    () => ({\n      actionRenderer: ActionRendererProductInformation,\n    }),\n    []\n  );\n\n  const { page, perPage } = usePaginationState();\n  const { state, setState } = useAppContext();\n  const offSet = (page?.value - 1) * perPage?.value;\n\n  const colDefs = [\n    ...defaultDescColumns,\n    {\n      headerName: 'Actions',\n      field: 'productKey',\n      flex: 2,\n      editable: false,\n      minWidth: 200,\n      sortable: false,\n      cellRenderer: 'actionRenderer',\n      cellRendererParams: {\n        setResponseFromAi: setResponseFromAi,\n        gridRef: gridRef,\n      },\n    },\n  ];\n  const context = useMemo<any>(() => {\n    return {\n      loadingOverlayMessage: 'Loading',\n    };\n  }, []);\n\n  const onSelectionChanged = useCallback(() => {\n    let getSelectedRows = gridRef.current!.api.getSelectedRows();\n    setSelectedRows(getSelectedRows);\n  }, [offSet, perPage?.value]);\n\n  const pageRelatedData = {\n    dataLocale: dataLocale,\n    offSet: offSet,\n    perPage: perPage,\n  };\n\n  const handleSearch = async () => {\n    const data = await performSearch(\n      apiRoot,\n      search,\n      pageRelatedData,\n      setState,\n      setTableData,\n      setTotalProductCount,\n      setSearchPerformed\n    );\n    if (data) {\n      const filteredData = data.body.results.map((product: any) => {\n        const keyFeatures = product.masterVariant.attributes.find(\n          (item: any) => item.name === 'features'\n        );\n        const features = keyFeatures?.value[0][dataLocale] || '';\n        const description = product.description || '';\n        const nameInCurrentLocale = product.name?.[dataLocale];\n\n        return {\n          id: product.id,\n          version: product.version,\n          key: product.key,\n          masterData: {\n            current: {\n              name: nameInCurrentLocale,\n              description: description?.[dataLocale],\n              masterVariant: {\n                attributesRaw: [\n                  {\n                    name: 'features',\n                    value: [{ [dataLocale]: features }],\n                  },\n                ],\n              },\n            },\n          },\n        };\n      });\n      setTableData(filteredData);\n      setTotalProductCount(data.body.total);\n    }\n  };\n\n  const pageData = {\n    perPage,\n    offSet,\n  };\n\n  const fetchData = async (): Promise<void> => {\n    await fetchProductData(\n      apiRoot,\n      dataLocale,\n      pageData,\n      setState,\n      setTotalProductCount,\n      setTableData,\n      setSearchPerformed\n    );\n  };\n\n  useEffect(() => {\n    if (\n      responseFromAi?.id &&\n      responseFromAi?.description &&\n      responseFromAi?.version\n    ) {\n      let keyFeats = responseFromAi?.keyFeatures || ' ';\n      const updatedTableData = [...tableData];\n      const index = updatedTableData.findIndex(\n        (item) => item.id === responseFromAi.id\n      );\n      if (index !== -1) {\n        const cleanedFeatures = removeDoubleQuotes(keyFeats);\n        const cleanedDescription = removeDoubleQuotes(\n          responseFromAi.description\n        );\n        const attributesRaw =\n          updatedTableData[index].masterData.current.masterVariant\n            .attributesRaw;\n        let features = attributesRaw.find(\n          (item: any) => item.name === 'features'\n        );\n        let featureDatalocale = dataLocale;\n        if (!features) {\n          features = { name: 'features', value: [{ [featureDatalocale]: '' }] };\n          attributesRaw.push(features);\n        }\n        if (features?.value?.[0]) {\n          features.value[0][featureDatalocale] = cleanedFeatures;\n        }\n\n        updatedTableData[index].masterData.current.description =\n          cleanedDescription;\n        updatedTableData[index].version = responseFromAi.version;\n        setTableData(updatedTableData);\n      }\n    }\n  }, [responseFromAi, dataLocale]);\n\n  const searchBoxText = 'Search by Product key, Name, description';\n\n  const strings = { \n    dataLocale, secrets\n  }\n\n  return (\n    <GridContainer\n      search={search}\n      setSearch={setSearch}\n      handleSearch={handleSearch}\n      fetchData={fetchData}\n      selectedRows={selectedRows}\n      handleBulkGenerateClick={() =>\n        handleDescBulkGenerateClick(\n          strings,\n          context,\n          gridRef,\n          selectedRows,\n          setState,\n          tableData,\n          setTableData\n        )\n      }\n      handleBulkApplyClick={() =>\n        handleDescBulkApplyClick(\n          strings,\n          selectedRows,\n          setState,\n          context,\n          gridRef,\n          tableData,\n          setTableData,\n         \n        )\n      }\n      gridRef={gridRef}\n      state={state}\n      tableData={tableData}\n      colDefs={colDefs}\n      onSelectionChanged={onSelectionChanged}\n      context={context}\n      totalProductCount={totalProductCount}\n      page={page}\n      perPage={perPage}\n      searchPerformed={searchPerformed}\n      searchboxPlaceholder={searchBoxText}\n      components={components}\n    />\n  );\n};\nexport default DescriptionTableContainer;\n","import {  NavItems } from './TableContainer.types';\nimport TableContainer from './TableContainer';\nimport DescriptionTableContainer from './DescriptionTableContainer';\nimport { ISelectedPageProps } from '../SettingsData/Settings.types';\n\nexport interface ITableDataProps {\n  defaultPage: ISelectedPageProps | undefined;\n}\n\nconst TableData = ({ defaultPage }: ITableDataProps) => {\n  return (\n    <div>\n      {(() => {\n        switch (defaultPage?.title) {\n          case NavItems.SEO:\n            return <TableContainer />;\n          case NavItems.DESCRIPTION:\n            return <DescriptionTableContainer />;\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n};\n\nexport default TableData;\n","import { useState } from 'react';\nimport Text from '@commercetools-uikit/text';\nimport styles from './TableContainer.module.css';\nimport { TableContainerNavMock } from './TableContainer.mock';\nimport TableData from './TableData';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { GearIcon } from '@commercetools-uikit/icons';\nimport TabToggler from '../TabToggler/TabToggler';\nimport { ISelectedPageProps } from '../SettingsData/Settings.types';\n\nconst TableDataContainer = () => {\n  const [selectedPage, setSelectedPage] = useState<ISelectedPageProps[]>(\n    TableContainerNavMock\n  );\n  const defaultPage = selectedPage?.find((item) => item.isDefaultSelected);\n  const match = useRouteMatch();\n  return (\n    <div className={`${styles.tableContainer}`}>\n      <Text.Headline as=\"h2\">{'Generate Product information'}</Text.Headline>\n      <div className={`${styles.navContainer}`}>\n        <TabToggler\n          defaultPage={defaultPage}\n          selectedPage={selectedPage}\n          setSelectedPage={setSelectedPage}\n        />\n        <Link to={`${match.url}/settings`} className={`${styles.settingIcon}`}>\n          <GearIcon size=\"scale\" color=\"primary40\" />\n        </Link>\n      </div>\n\n      {defaultPage && <TableData defaultPage={defaultPage} />}\n    </div>\n  );\n};\n\nexport default TableDataContainer;\n","import type { ReactNode } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport Spacings from '@commercetools-uikit/spacings';\nimport Settings from './components/Settings/Settings';\nimport { useAppContext } from './context/AppContext';\nimport Notification from './components/Notification/Notification';\nimport TableDataContainer from './components/TableContainer/TableDataContainer';\n\ntype ApplicationRoutesProps = {\n  children?: ReactNode;\n};\nconst ApplicationRoutes = (_props: ApplicationRoutesProps) => {\n  const match = useRouteMatch();\n  const { state, setState } = useAppContext();\n  /**\n   * When using routes, there is a good chance that you might want to\n   * restrict the access to a certain route based on the user permissions.\n   * You can evaluate user permissions using the `useIsAuthorized` hook.\n   * For more information see https://docs.commercetools.com/custom-applications/development/permissions\n   *\n   * NOTE that by default the Custom Application implicitly checks for a \"View\" permission,\n   * otherwise it won't render. Therefore, checking for \"View\" permissions here\n   * is redundant and not strictly necessary.\n   */\n\n  return (\n    <>\n      <Spacings.Inset scale=\"l\">\n        <Switch>\n          <Route path={`${match.path}/settings`}>\n            <Settings linkToProducts={match.url} />\n          </Route>\n          <Route>\n            <TableDataContainer />\n          </Route>\n        </Switch>\n      </Spacings.Inset>\n      {state?.notificationMessage && (\n        <Notification\n          successMessage={state.notificationMessage}\n          setSuccessMessage={setState}\n          type={state.notificationMessageType}\n        />\n      )}\n    </>\n  );\n};\nApplicationRoutes.displayName = 'ApplicationRoutes';\n\nexport default ApplicationRoutes;\n"],"names":["NavItems","_ref","_ref$shoudLoaderSpinn","shoudLoaderSpinnerShow","loadingMessage","_jsxs","className","concat","styles","children","_jsx","LoadingSpinner","createRulesInCtCustomObj","async","payload","setState","key","name","secrets","_context","CTP_API_URL","CTP_PROJECT_KEY","prompts","_mapInstanceProperty","rulesContent","call","rule","rulesInput","accessToken","localStorage","getItem","LS_KEY","_context2","prev","_objectSpread","isApiFetching","baseUrl","_concatInstanceProperty","requestBody","container","value","response","axios","_JSON$stringify","headers","Authorization","data","error","console","getAllSavedRulesFromCtObj","_context3","_context4","_context5","pageLoading","RuleInputField","_component$errors","_component$errors$rul","item","index","component","register","required","placeholder","errors","style","color","marginTop","message","currentIndex","IconButton","icon","PlusBoldIcon","label","onClick","handleAddField","CloseBoldIcon","handleRemoveField","id","RuleForm","_ref2","onSubmit","handleSubmit","onSubmitFunction","fields","SecondaryButton","iconLeft","type","isDisabled","PrimaryButton","_ref3","ruleComponents","state","heading","isApiFetchingSEO","isApiFetchingDescription","isApiFetchingKeyFeatures","SettingsRulesData","useApplicationContext","context","environment","apiUrl","projectKey","_useState","useState","seo","description","keyFeatures","_useState2","_slicedToArray","setCurrentIndex","_useAppContext","useAppContext","_useForm","useForm","controlSEO","control","registerSEO","handleSubmitSEO","errorsSEO","formState","_useForm2","controlDescription","registerDescription","handleSubmitDescription","errorsDescription","_useForm3","controlKeyFeatures","registerKeyFeatures","handleSubmitKeyFeatures","errorsKeyFeatures","_useFieldArray","useFieldArray","fieldsSEO","appendSEO","append","removeSEO","remove","_useFieldArray2","fieldsDescription","appendDescription","removeDescription","_useFieldArray3","fieldsKeyFeatures","appendKeyFeatures","removeKeyFeatures","isInitialized","useRef","useEffect","current","length","deletable","CTP_CUSTOM_OBJ_SEO_CONTAINER_NAME","CTP_CUSTOM_OBJ_SEO_CONTAINER_KEY","_Array$isArray","_forEachInstanceProperty","fetchSavedSEORules","CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_NAME","CTP_CUSTOM_OBJ_DESCRIPTION_CONTAINER_KEY","fetchSavedDescriptionRules","CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_NAME","CTP_CUSTOM_OBJ_KEYFEATURES_CONTAINER_KEY","fetchSavedKeyFeatureRules","event","preventDefault","formData","notificationMessage","notificationMessageType","log","Loader","SettingsRuleDataRender","SettingsOpenAiData","setValue","fetchKey","CTP_CUSTOM_OBJ_AI_CONTAINER_NAME","CTP_CUSTOM_OBJ_AI_CONTAINER_KEY","getSavedAiKeyFromCtCustomObj","setItem","aiKey","saveAiKeyInCtCustomObj","openAi","defaultPage","title","RULES","OPENAI","settingsNavMock","isDefaultSelected","selectedPage","setSelectedPage","ViewSwitcher","defaultSelected","onChange","pageName","updatedActivePages","navMenu","menuToggleHandler","props","_findInstanceProperty","Spacings","scale","FlatButton","as","RouterLink","to","linkToProducts","BackIcon","Text","TabToggler","SettingsData","successMessage","setSuccessMessage","_ref$type","handleNotificationDismiss","timer","_setTimeout","clearTimeout","ContentNotification","onRemove","TableContainerNavMock","authMiddlewareOptions","host","credentials","clientId","clientSecret","scopes","fetch","httpMiddlewareOptions","ctpClient","ClientBuilder","withClientCredentialsFlow","withHttpMiddleware","build","createApiBuilderFromCtpClient","withProjectKey","commonColumns","field","flex","minWidth","editable","headerCheckboxSelection","checkboxSelection","valueGetter","p","_p$data","params","_params$data","masterData","performSearch","apiRoot","search","pageRelatedData","setTableData","setTotalProductCount","setSearchPerformed","dataLocale","perPage","offSet","Error","productProjections","get","queryArgs","limit","offset","execute","fetchProductData","pageData","_productsData$body","_productsData$body2","productsData","graphql","post","body","query","variables","Number","Locale","products","total","results","removeDoubleQuotes","text","_startsWithInstanceProperty","_endsWithInstanceProperty","_sliceInstanceProperty","searchPerformed","selectedRows","handleGenerate","handleApply","gridRef","size","_gridRef$current","api","stopEditing","_props$context","loadingOverlayMessage","backgroundColor","setSearch","handleSearch","fetchData","handleBulkGenerateClick","handleBulkApplyClick","tableData","colDefs","onSelectionChanged","totalProductCount","page","searchboxPlaceholder","components","gridStyle","useMemo","width","height","_useApplicationContex","_context$project","projectLanguages","project","languages","defaultColDef","tooltipComponent","CustomTooltip","loadingOverlayComponent","CustomLoadingOverlay","SearchTextInput","String","target","onReset","BulkUpdateButtonSection","display","flexDirection","gap","AgGridReact","ref","rowData","columnDefs","rowSelection","suppressRowClickSelection","tooltipShowDelay","tooltipInteraction","reactiveCustomComponents","Pagination","totalItems","onPageChange","onPerPageChange","perPageRange","SearchPerformed","SimpleTextEditor","forwardRef","onValueChange","eventKey","updateValue","val","_refInput$current","startValue","refInput","focus","e","initialValue","CheckBoldIcon","defaultDescColumns","headerName","tooltipValueGetter","valueSetter","newValue","sortable","cellEditor","cellEditorPopup","_params$data$masterDa","LS_DataLocale","features","masterVariant","attributesRaw","push","defaultSeoColumns","_params$data2","metaTitle","_params$data3","metaDescription","openAiKey","setNotification","processBatches","productIds","batchSize","strings","generateMetaData","queryOpenAi","successHandler","totalBatches","Math","ceil","i","start","end","min","batchIds","_Promise","_someInstanceProperty","res","_res$data","status","errorMessage","matchData","_response$choices","metaData","choices","content","featuresMatch","match","featuresPattern","_trimInstanceProperty","descriptionMatch","normalDescPattern","seoMatchData","_response$choices2","_titleMatch$","_descriptionMatch$","titleMatch","titlePattern","descriptionPattern","getProductById","productId","locale","product","openAiFunction","_productResponse$mast","_productResponse$mast2","_categories$map","productResponse","productName","categories","categoryNames","category","join","localeQuery","_data$error","updateProductMeta","version","_existingFeatures","existingDescriptions","descriptionAllLocales","descriptionObj","keyFeaturesObj","existingFeatures","_productResponse$mast3","actions","action","staged","queryProductOpenAi","OpenAI","apiKey","dangerouslyAllowBrowser","updatedPromptDescription","updatedPromptKeyfeatures","_promptDescription$va","_promptKeyFeatures$va","promptDescription","promptKeyFeatures","allEmptyDescriptionrules","_everyInstanceProperty","test","allEmptyKeyFeaturesrules","_promptDescription$va2","_promptKeyFeatures$va2","contentString","chat","completions","create","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","messages","role","updateProductSeoMeta","existingMetaTitles","metaTitleAllLocales","existingMetaDescriptions","metaDescriptionAllLocales","metaTitleObj","metaDescriptionObj","updatedPrompt","_prompt$value","prompt","_prompt$value2","handleDescBulkGenerateClick","selectedNodes","getSelectedNodes","showLoadingOverlay","bulkProductIds","aiBulkResponse","productMetaDataResponses","bulkGenerateProductMetaData","updatedTableData","matchDataResponse","cleanedKeyFeatures","cleanedDescription","_findIndexInstanceProperty","_updatedTableData$ind","_features","featureDatalocale","node","_api$getRowNode","getRowNode","setSelected","hideOverlay","handleSeoBulkGenerateClick","metaDataResponses","bulkGenerateSeoMetaData","responseData","cleanedTitle","_api$getRowNode2","dataApplication","updatedProduct","handleDescBulkApplyClick","featuredDataLocale","bulkSelectedProductsData","_product$masterData","_product$masterData2","applyBulkResponses","batchProducts","batchData","applyBulkPromises","applyBulkProductMeta","handleSeoBulkApplyClick","_product$masterData3","_product$masterData4","applyBulkSeoPromises","applyBulkProductSeoMeta","allProps","rowIndex","ActionRenderButtons","aiResponse","setResponseFromAi","_props$gridRef","_updatedRowData$maste","_props$gridRef2","updatedRowData","getDisplayedRowAtIndex","_updatedRowData$maste2","TableContainer","seoTableData","setSeoTableData","_useState3","_useState4","totalProductsCount","setTotalProductsCount","_useState5","_useState6","seoSearch","setSeoSearch","_useState7","_useState8","isSearchPerformed","setIsSearchPerformed","_useState9","_useState10","seoSelectedRows","setSeoSelectedRows","_useState11","_useState12","seoResponseFromAi","setSeoResponseFromAi","seoGridRef","actionRenderer","ActionRendererSEO","_usePaginationState","usePaginationState","cellRenderer","cellRendererParams","useCallback","getSelectedRows","GridContainer","filteredData","_product$name","_product$metaTitle","_product$metaDescript","nameInCurrentLocale","metaTitleInCurrentLocale","metaDescriptionInCurrentLocale","featureDataLocale","DescriptionTableContainer","setSelectedRows","responseFromAi","ActionRendererProductInformation","keyFeats","cleanedFeatures","attributes","TableDataContainer","useRouteMatch","Link","url","GearIcon","TableData","ApplicationRoutes","_props","_Fragment","Switch","Route","path","Settings","Notification","displayName"],"sourceRoot":""}